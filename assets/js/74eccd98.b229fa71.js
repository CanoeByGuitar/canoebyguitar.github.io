"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5668],{3905:(e,n,t)=>{t.d(n,{Zo:()=>o,kt:()=>k});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},o=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),d=c(t),m=i,k=d["".concat(p,".").concat(m)]||d[m]||u[m]||a;return t?r.createElement(k,l(l({ref:n},o),{},{components:t})):r.createElement(k,l({ref:n},o))}));function k(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=m;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s[d]="string"==typeof e?e:i,l[1]=s;for(var c=2;c<a;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3476:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=t(7462),i=(t(7294),t(3905));const a={},l=void 0,s={permalink:"/blog/\u9879\u76ee/CAD\u8bfe\u7a0b\u4f5c\u4e1a\uff1a\u7269\u7406\u5f15\u64ce/PhysicEngine",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/\u9879\u76ee/CAD\u8bfe\u7a0b\u4f5c\u4e1a\uff1a\u7269\u7406\u5f15\u64ce/PhysicEngine.md",source:"@site/blog/\u9879\u76ee/CAD\u8bfe\u7a0b\u4f5c\u4e1a\uff1a\u7269\u7406\u5f15\u64ce/PhysicEngine.md",title:"\u9879\u76ee/CAD\u8bfe\u7a0b\u4f5c\u4e1a\uff1a\u7269\u7406\u5f15\u64ce/PhysicEngine",description:"\x3c!-- ---",date:"2023-12-02T06:34:46.000Z",formattedDate:"December 2, 2023",tags:[],readingTime:13.505,hasTruncateMarker:!0,authors:[],frontMatter:{},prevItem:{title:"\u4e09\u79cd\u64cd\u4f5c\u7cfb\u7edf\u5f00\u53d1\u73af\u5883\u7684\u642d\u5efa",permalink:"/blog/\u6742\u8c08/\u4e09\u79cd\u64cd\u4f5c\u7cfb\u7edf\u5f00\u53d1\u73af\u5883\u7684\u642d\u5efa/Linux\u95ee\u9898\u6c47\u603b"},nextItem:{title:"\u6e32\u67d3\u57fa\u7840 - Fundamental of Graphics",permalink:"/blog/Rendering/\u6e32\u67d3\u57fa\u7840 - Fundamental of Graphics/1"}},p={authorsImageUrls:[]},c=[{value:"Before Reading",id:"before-reading",level:2},{value:"\u603b\u4f53\u6a21\u5757",id:"\u603b\u4f53\u6a21\u5757",level:2},{value:"\u51e0\u4f55\u6a21\u5757",id:"\u51e0\u4f55\u6a21\u5757",level:2},{value:"BVH",id:"bvh",level:3},{value:"\u6e32\u67d3\u6a21\u5757",id:"\u6e32\u67d3\u6a21\u5757",level:2},{value:"CMakeLists.txt",id:"cmakeliststxt",level:3},{value:"VAO VBO EBO",id:"vao-vbo-ebo",level:3},{value:"\u601d\u8def",id:"\u601d\u8def",level:3},{value:"Physic\u6a21\u5757",id:"physic\u6a21\u5757",level:2},{value:"cloth",id:"cloth",level:3},{value:"implicit solver",id:"implicit-solver",level:4},{value:"C++",id:"c",level:2},{value:"std::string_view",id:"stdstring_view",level:3},{value:"\u5751",id:"\u5751",level:2},{value:"\u5173\u4e8eModel",id:"\u5173\u4e8emodel",level:3},{value:"switch case",id:"switch-case",level:3},{value:"IMGUI \u4e0e renderer\u5c42\u7ea7",id:"imgui-\u4e0e-renderer\u5c42\u7ea7",level:3},{value:"\u9f20\u6807\u5728IMGUI\u9762\u677f\u4e0a\u65f6\u7981\u7528\u6444\u50cf\u5934\u8f6c\u52a8",id:"\u9f20\u6807\u5728imgui\u9762\u677f\u4e0a\u65f6\u7981\u7528\u6444\u50cf\u5934\u8f6c\u52a8",level:3},{value:"\u5168\u5c40\u53d8\u91cf static / extern",id:"\u5168\u5c40\u53d8\u91cf-static--extern",level:3},{value:"static \u5b9a\u4e49\u672c\u7f16\u8bd1\u5355\u5143\u7684\u5168\u5c40\u53d8\u91cf",id:"static-\u5b9a\u4e49\u672c\u7f16\u8bd1\u5355\u5143\u7684\u5168\u5c40\u53d8\u91cf",level:4},{value:"extern \u58f0\u660e\u672c\u7f16\u8bd1\u5355\u5143\u6216\u5176\u4ed6\u7f16\u8bd1\u5355\u5143\u7684\u5168\u5c40\u53d8\u91cf",id:"extern-\u58f0\u660e\u672c\u7f16\u8bd1\u5355\u5143\u6216\u5176\u4ed6\u7f16\u8bd1\u5355\u5143\u7684\u5168\u5c40\u53d8\u91cf",level:4},{value:"\u5b9e\u8df5",id:"\u5b9e\u8df5",level:4},{value:"\u865a\u51fd\u6570",id:"\u865a\u51fd\u6570",level:3},{value:"opengl",id:"opengl",level:3},{value:"Texture uv\u5750\u6807",id:"texture-uv\u5750\u6807",level:3}],o={toc:c},d="wrapper";function u(e){let{components:n,...a}=e;return(0,i.kt)(d,(0,r.Z)({},o,a,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"before-reading"},"Before Reading"),(0,i.kt)("p",null,"\u672c\u9879\u76ee\u53ea\u4f5c\u4e3a\u8bfe\u7a0b\u4f5c\u4e1a\u3002",(0,i.kt)("a",{parentName:"p",href:"https://github.com/CanoeByGuitar/GamePhysicsEngine"},"\u9879\u76ee\u5730\u5740")),(0,i.kt)("h2",{id:"\u603b\u4f53\u6a21\u5757"},"\u603b\u4f53\u6a21\u5757"),(0,i.kt)("p",null,"\u51e0\u4f55\u6a21\u5757\u4e3a\u516c\u5171\u7684\u51e0\u4f55\u4f53\uff0c\u5982line\u3001circle\u3001AABB\u3001triangle\u3001mesh\u7b49\uff0c\u5e76\u6709\u76f8\u5e94\u7684\u51e0\u4f55\u53d8\u6362\u548c\u7a7a\u95f4\u52a0\u901f\u65b9\u6cd5\u3002"),(0,i.kt)("p",null,"\u7269\u7406\u548c\u6e32\u67d3\u6a21\u5757\u90fd\u7ee7\u627f\u51e0\u4f55\u6a21\u5757\u7684\u7c7b\uff0c\u7269\u7406\u6a21\u5757\u53ef\u80fd\u6709\u989d\u5916\u7684\u8d28\u91cf\u3001\u901f\u5ea6\u3001\u5f62\u53d8\u68af\u5ea6\u7b49\u6570\u636e\uff0c\u6e32\u67d3\u6a21\u5757\u6709\u989d\u5916\u7684\u4e09\u89d2\u5f62\u5256\u5206\u3001shader\u3001VAO\u7b49\u6570\u636e"),(0,i.kt)("p",null,"\u4f7f\u7528\u89c2\u5bdf\u8005\u6a21\u5f0f\u548cstd::function\u5b9e\u73b0\uff0c\u7269\u7406\u6a21\u5757\u5bf9Geometry\u4ea7\u751f\u66f4\u65b0\u65f6\u901a\u77e5\u6e32\u67d3\u6a21\u5757\u8fdb\u884c\u52a8\u6001\u6e32\u67d3\u3002"),(0,i.kt)("p",null,(0,i.kt)("img",{src:t(9247).Z,width:"1394",height:"1000"})),(0,i.kt)("h2",{id:"\u51e0\u4f55\u6a21\u5757"},"\u51e0\u4f55\u6a21\u5757"),(0,i.kt)("h3",{id:"bvh"},"BVH"),(0,i.kt)("p",null,"\u4ece\u8ddd\u79bb\u7684\u4e2d\u70b9\u53bb\u5212\u5206\uff0c\u5b58\u5728\u6b7b\u5faa\u73af\u7684\u95ee\u9898\uff0c\u5f53\u4e00\u4e2a\u8282\u70b9\u7684\u5144\u5f1f\u8282\u70b9\u4e3a\u7a7a\u65f6\uff0c\u5c31\u9700\u8981\u9012\u5f52\u8fd4\u56de\u4e86\uff0c\u5426\u5219\u4e00\u4e2aAABB\u4e2d\u6709n\u4e2a\u4e09\u89d2\u5f62\uff0c\u5212\u5206\u540e\u53d8\u4e3a0 + n, \u7ee7\u7eed\u8fd8\u662f0 + n"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'std::pair<BVHNode*, BVHNode*> SplitBVHNode(BVHNode* node){\n        // x-alias partition\n        auto bound = node->bound;\n        std::vector<Triangle*> leftTriangles, rightTriangles;\n        leftTriangles.reserve(node->triangles.size());\n        rightTriangles.reserve(node->triangles.size());\n        for(const auto& tri : node->triangles){\n            if(GetMax(GetBound(*tri)).x < bound.position.x){\n                leftTriangles.push_back(tri);\n            }else{\n                rightTriangles.push_back(tri);\n            }\n        }\n        auto left = new BVHNode(GetBound(leftTriangles), std::move(leftTriangles));\n        auto right = new BVHNode(GetBound(rightTriangles), std::move(rightTriangles));\n        return {left, right};\n    }\n\n    void RecursiveBuildBVH(BVHNode* node, int kThreshold) {\n        // Boundary Condition\n        if(node->triangles.size() < kThreshold){\n            return;\n        }\n//        if(BVH_DEPTH > MAX_DEPTH) return;\n\n        PHY_DEBUG("Node bound pos: {}, halfSize: {}, triNum:{}", node->bound.position, node->bound.halfSize, node->triangles.size());\n\n\n        // Split\n        auto [leftNode, rightNode] = SplitBVHNode(node);\n\n        if(!leftNode->triangles.empty() || !rightNode->triangles.empty()){\n            std::vector<Triangle*>().swap(node->triangles);\n        }\n\n        bool shouldReturn = false;\n        if(!leftNode->triangles.empty()){\n            node->left = leftNode;\n        }else{\n            shouldReturn = true;\n        }\n\n        if(!rightNode->triangles.empty()){\n            node->right = rightNode;\n        }else{\n            shouldReturn = true;\n        }\n        if(shouldReturn) return;\n\n        // Recursive\n        BVH_DEPTH++;\n        RecursiveBuildBVH(node->left, kThreshold);\n        BVH_DEPTH--;\n\n        BVH_DEPTH++;\n        RecursiveBuildBVH(node->right, kThreshold);\n        BVH_DEPTH--;\n    }\n')),(0,i.kt)("p",null,"\u53ea\u4ecex\u65b9\u5411\u53d6\u4e2d\u70b9\u53bb\u5212\u5206\u4e5f\u4f1a\u5bfc\u81f4AABB\u8d8a\u6765\u8d8a\u7ec6\u957f"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"image-20230610133059596",src:t(3515).Z,width:"1838",height:"792"})),(0,i.kt)("h2",{id:"\u6e32\u67d3\u6a21\u5757"},"\u6e32\u67d3\u6a21\u5757"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"image-20230530004420139",src:t(9181).Z,width:"1444",height:"1000"})),(0,i.kt)("h3",{id:"cmakeliststxt"},"CMakeLists.txt"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cmake"},"if(APPLE)\n#   OPENGL\n    find_package(OpenGL REQUIRED)\n\n#   GLFW\n    find_package(glfw3 REQUIRED)\n\n    target_link_libraries(Renderer PUBLIC OpenGL::GL glfw)\n")),(0,i.kt)("p",null,"\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u4e3aCMake\u4f1a\u5c1d\u8bd5\u67e5\u627e\u540d\u4e3a",(0,i.kt)("inlineCode",{parentName:"p"},"FindOpenGL.cmake"),"\u7684\u6a21\u5757\u6587\u4ef6\u3002\u5728\u672c\u5730mac\u4e2d\u8def\u5f84\u4e3a"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"~/brew-2.2.2/Cellar/cmake/3.23.2/share/cmake/Modules")),(0,i.kt)("p",null,"\u91cc\u9762\u4f1a\u8bbe\u5b9a\u4e00\u4e9b\u5e93\u7684\u540d\u79f0\uff0c\u6bd4\u5982OpenGL::GL\u53ef\u4ee5\u76f4\u63a5\u94fe\u63a5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cmake"},"31 ``OpenGL::GL``\n 32   Defined to the platform-specific OpenGL libraries if the system has OpenGL    .\n 33 ``OpenGL::GLU``\n 34   Defined if the system has OpenGL Utility Library (GLU).\n 35 \n 36 .. versionadded:: 3.10\n 37   Additionally, the following GLVND-specific library targets are defined:\n 38 \n 39 ``OpenGL::OpenGL``\n 40   Defined to libOpenGL if the system is GLVND-based.\n 41 ``OpenGL::GLX``\n 42   Defined if the system has OpenGL Extension to the X Window System (GLX).\n 43 ``OpenGL::EGL``\n 44   Defined if the system has EGL.\n")),(0,i.kt)("h3",{id:"vao-vbo-ebo"},"VAO VBO EBO"),(0,i.kt)("h3",{id:"\u601d\u8def"},"\u601d\u8def"),(0,i.kt)("p",null,"1 VAO <==> 1 VBO,  1 VEO  \u7528\u4e00\u4e2aGLVertexArray\u7c7b"),(0,i.kt)("p",null,"\u5c06\u4e00\u4e2aGLVertexArray\u5bf9\u8c61\u7ed1\u5b9a\u4e00\u4e2a\u7269\u4f53\uff0c\u573a\u666f\u4e2d\u53ef\u4ee5\u52a0\u5165\u591a\u4e2a\u7269\u4f53\uff0c\u6bcf\u4e2a\u7269\u4f53\u8d1f\u8d23\u81ea\u5df1\u7684GLVertexArray\u7684GenBuffer\u3001BufferData\u3001Bind\u3001UnBind"),(0,i.kt)("p",null,"\u6e32\u67d3\u7684\u4e00\u4e2a\u6d41\u7a0b\u5927\u6982\u662f\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u8bbe\u7f6e\u6e32\u67d3\u53c2\u6570\uff08\u6bd4\u5982\u6df1\u5ea6\u6d4b\u8bd5\u3001\u6df7\u5408\u6d4b\u8bd5\u7b49\uff09"),(0,i.kt)("li",{parentName:"ul"},"\u8bbe\u7f6eMVP\u77e9\u9635"),(0,i.kt)("li",{parentName:"ul"},"==\u8bbe\u7f6ematerial\uff08\u5305\u62ec\u5404\u79cdtexture\uff09\u3010\u53ef\u4ee5\u901a\u8fc7\u5de5\u5382\u6a21\u5f0f\uff0c\u8bfb\u53d6json\u3011==\uff08SetMaterial\uff09"),(0,i.kt)("li",{parentName:"ul"},"\u6e32\u67d3\u7b2c\u4e00\u5e27",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"==mesh ==> ","[vertices data, indices data]","==(GetVerticesBuffer)"),(0,i.kt)("li",{parentName:"ul"},"// \u4ee5\u4e0b4\u4e2a\u653e\u5728\u4e00\u4e2a\u51fd\u6570\u91cc\uff08SetPipelineData\uff09"),(0,i.kt)("li",{parentName:"ul"},"==\u751f\u6210 VAO, VBO, EBO=="),(0,i.kt)("li",{parentName:"ul"},"==vertices data ==> VBO=="),(0,i.kt)("li",{parentName:"ul"},"==indices data ==> EBO=="),(0,i.kt)("li",{parentName:"ul"},"==\u8bbe\u7f6eVAO\u7684vertex attribute pointer\uff0c \u5e76enable=="),(0,i.kt)("li",{parentName:"ul"}),(0,i.kt)("li",{parentName:"ul"},"draw"))),(0,i.kt)("li",{parentName:"ul"},"RenderLoop",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Update mesh\u3010\u7269\u7406\u8fd0\u52a8\u3011"),(0,i.kt)("li",{parentName:"ul"},"\u6e32\u67d3\u4e00\u5e27",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"==mesh ==> ","[vertices data, indices data]","==(GetVerticesBuffer)"),(0,i.kt)("li",{parentName:"ul"},"==\u66f4\u65b0texture, material\uff08\u53ef\u80fd\u9700\u8981, \u53ea\u9700\u8981\u66f4\u65b0material\uff0c\u800c\u4e0d\u7528\u66f4\u65b0shader\uff09==\uff08SetMaterial\uff09"),(0,i.kt)("li",{parentName:"ul"},"// \u4ee5\u4e0b4\u4e2a\u653e\u5728\u4e00\u4e2a\u51fd\u6570\u91cc\uff08SetPipelineData\uff09"),(0,i.kt)("li",{parentName:"ul"},"==\u751f\u6210 VAO, VBO, EBO=="),(0,i.kt)("li",{parentName:"ul"},"==vertices data ==> VBO=="),(0,i.kt)("li",{parentName:"ul"},"==indices data ==> EBO=="),(0,i.kt)("li",{parentName:"ul"},"==\u8bbe\u7f6eVAO\u7684vertex attribute pointer\uff0c \u5e76enable=="),(0,i.kt)("li",{parentName:"ul"}),(0,i.kt)("li",{parentName:"ul"},"draw")))))),(0,i.kt)("p",null,"\u9ec4\u8272\u90e8\u5206\u5199\u5728ObjectBase\u91cc, ObjectBase\u88ab\u5404\u79cd\u7269\u4f53\u7ee7\u627f\uff0c\u6bd4\u5982Mesh, Cube\u7b49\u3002"),(0,i.kt)("p",null,"\u989d\u5916\u5957\u4e00\u5c42Object\u662f\u4e3a\u4e86Scene\u91cc\u53ef\u4ee5\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"std::vector<std::shared_ptr<Object>> m_objects")," \u6765\u5b9e\u73b0\u591a\u6001"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Object{\n    public:\n        virtual ~Object() = default;\n        virtual void SetPipelineData() = 0;\n        virtual void GetVerticesBuffer() = 0;\n        virtual void SetMaterial() = 0;\n    };\n\ntemplate<typename VertexType>\nclass ObjectBase : public Object {\n  public:\n  virtual void SetPipelineData() = 0; // Setup VAO, VBO, VEO\n  virtual void GetVerticesBuffer() = 0; // Get vertices and indices\n  virtual void SetMaterial() = 0; // Set shader/material parameter/texture\n\n  public:\n  std::vector<VertexType> m_vertices;\n  std::vector<unsigned int> m_indices;\n  Shader *m_shader;\n  GLVertexArray m_VAO{};\n};\n")),(0,i.kt)("p",null,"VertexType\u7528\u6765\u5236\u5b9a\u67d0\u4e2a\u7269\u4f53\u5728\u6e32\u67d3\u7ba1\u7ebf\u4e0a\uff0c\u4e00\u4e2a\u8282\u70b9\u7684\u683c\u5f0f\uff0c\u5728ObjectBase\u7684\u7ee7\u627f\u7c7b\u4e2d\u8bbe\u7f6e\uff0c\u65b9\u4fbf\u62d3\u5c55\uff0c\u6bd4\u5982"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"struct MeshVertex{\n        vec3 position;\n        vec3 normal;\n        vec2 coord;\n    };\n\n    class Mesh : public ObjectBase<MeshVertex>{\n    public:\n        ~Mesh() override;\n        void SetPipelineData() override;\n        void GetVerticesBuffer() override;\n        void SetMaterial() override;\n\n    private:\n        std::shared_ptr<geo::Mesh> GeoMesh;\n    };\n")),(0,i.kt)("p",null,"\u867d\u7136\u6211\u4eec\u77e5\u9053\uff0c\u4e00\u4e2a\u6a21\u578b\uff0c\u6bd4\u5982*.obj\u53ef\u80fd\u7531\u5f88\u591a\u4e2amesh\u7ec4\u6210\uff0c\u4f46\u6211\u4eec\u5c06\u8fd9\u79cd\u6a21\u578b\u62bd\u8c61\u4e3ageo::mesh\uff0c\u5728geometry\u4e2d\u5904\u7406\u53d8\u6362\u3001\u7f29\u653e\u7b49\u64cd\u4f5c\uff0c\u4f20\u8f93\u7ed9renderer::mesh\u9001\u4e0a\u6e32\u67d3\u7ba1\u7ebf\u3002"),(0,i.kt)("h2",{id:"physic\u6a21\u5757"},"Physic\u6a21\u5757"),(0,i.kt)("h3",{id:"cloth"},"cloth"),(0,i.kt)("h4",{id:"implicit-solver"},"implicit solver"),(0,i.kt)("p",null,"\u6ce8\u610f \u4e0b\u56fe\u4e2d\u7684x","[0]"," , v","[0]","\u8868\u793a\u7b2c0\u65f6\u523b\uff0c x(0)\u8868\u793anewton\u7684\u521d\u59cb\u503c"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"image-20230617225252412",src:t(7657).Z,width:"1400",height:"860"})),(0,i.kt)("p",null,"\u51c6\u786e\u7684Solve dx\u5e94\u8be5\u91c7\u7528\u7ebf\u6027\u7cfb\u7edf\u7684\u89e3\u7b97\u5668\uff0c\u6bd4\u5982jacobi\u3001pcg\u7b49\uff0c\u8fd9\u91cc\u7528\u8fd1\u4f3c\uff0c g\u662f\u4e00\u4ecb\u5bfc\uff0c hessian\u8fd1\u4f3c\u4f4d\u4e00\u4e2a\u5bf9\u89d2\u9635\uff0ck\u662f\u5f39\u7c27\u7684K"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"image-20230617225755140",src:t(2200).Z,width:"638",height:"166"})),(0,i.kt)("p",null,"\u4e24\u79cd\u521d\u59cb\u5316\u533a\u522b\u4e0d\u5927\uff0c\u5728\u8bbe\u5b9a\u6700\u5927\u8fed\u4ee3\u6b21\u6570\u4f4d32\u65f6\uff0c\u524d\u8005\u4e3a40ms/substep\uff0c\u540e\u8005\u4e3a50ms/substep"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u4f18\u5316\u8fc7\u7a0b")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u6700\u5f00\u59cb40ms"),(0,i.kt)("li",{parentName:"ol"})),(0,i.kt)("h2",{id:"c"},"C++"),(0,i.kt)("h3",{id:"stdstring_view"},"std::string_view"),(0,i.kt)("p",null,"c++17"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'std::string s = "123456"; // \u4f1a\u628a c string \u5e38\u91cf\u6df1\u62f7\u8d1d\u7ed9s \nstd::string_view s = "123456"; //\u53ea\u5305\u62ec\u9996\u4f4d\u4e24\u4e2a\u6307\u9488\uff0c \u4e0d\u4f1a\u62f7\u8d1d\uff0c\u4f46read-only\n')),(0,i.kt)("h2",{id:"\u5751"},"\u5751"),(0,i.kt)("h3",{id:"\u5173\u4e8emodel"},"\u5173\u4e8eModel"),(0,i.kt)("p",null,"\u4ee5.obj\u4e3a\u4f8b\uff0c\u6b63\u5e38\u7684obj file\u4e2d\uff0cvertex\u662f\u4e0d\u4f1a\u91cd\u590d\u7684\uff0c\u6240\u4ee5",(0,i.kt)("strong",{parentName:"p"},"vertices.size() < indices.size()")),(0,i.kt)("p",null,"\u4f46\u5728load\u4e4b\u540e\uff0c\u4e3b\u6d41\u7684loader\uff08\u6bd4\u5982assimp\u7684\u9ed8\u8ba4\u53c2\u6570\u548ctinyobjloader\uff09\u4f1a\u628avertex\u91cd\u590d\u6765\u5b9e\u73b0\u4e24\u4e2a\u9762\u7684\u516c\u5171\u9876\u70b9\u5177\u6709\u4e0d\u540c\u7684normal\uff0c\u6240\u4ee5",(0,i.kt)("strong",{parentName:"p"},"vertices.size() == indices.size()")),(0,i.kt)("p",null,"\u800c\u6211\u5728\u6e32\u67d3\u6a21\u5757\u4e2d\u91c7\u53d6\u4e86\u91cd\u590d\u5b9a\u70b9\u7684\u65b9\u6848\uff0c\u5728\u7269\u7406\u6a21\u5757\u4f7f\u7528\u4e86\u4e0d\u91cd\u590d\u7684\u65b9\u6848\uff08\u540e\u7eed\u4f18\u5316\uff09\uff0c\u6240\u4ee5\u5199\u4e86\u76f8\u4e92\u8f6c\u5316\u7684\u51fd\u6570\u3002"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u4e0d\u91cd\u590d ==> \u91cd\u590d\uff0c \u8fd9\u91cc\u8f6c\u6210 vector<Triangle*>")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"auto& triVec = m_model->m_meshes[0].triangles;\n    triVec.clear();\n    triVec.reserve(m_indices.size() / 3);\n    for(int i = 0; i < m_indices.size(); i += 3){\n        auto tri = new geo::Triangle(\n                m_vertices[m_indices[i]],\n                m_vertices[m_indices[i + 1]],\n                m_vertices[m_indices[i + 2]]\n        );\n        triVec.push_back(tri);\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u91cd\u590d ==> \u4e0d\u91cd\u590d")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'struct Vec3Hash {\n    size_t operator()(const vec3& v) const {\n        size_t seed = 0;\n        std::hash<float> hasher;\n        seed ^= hasher(v.x) + 0x9e3779b9 + (seed << 6) + (seed >> 2);\n        seed ^= hasher(v.y) + 0x9e3779b9 + (seed << 6) + (seed >> 2);\n        seed ^= hasher(v.z) + 0x9e3779b9 + (seed << 6) + (seed >> 2);\n        return seed;\n    }\n};\n\nstd::unordered_map<vec3, int, Vec3Hash> vertexMap;\nstd::vector<vec3> uniqueVertices;\nuniqueVertices.reserve(m_vertices.size());\n\n// \u6ce8\u610f\u8981\u904d\u5386face\nfor (int i = 0; i < m_indices.size(); i++) {\n  auto vertIdx = m_indices[i];\n  auto it = vertexMap.find(m_vertices[vertIdx]);\n  if (it == vertexMap.end()) {\n    int newIndex = static_cast<int>(uniqueVertices.size());\n    vertexMap[m_vertices[vertIdx]] = newIndex;\n    uniqueVertices.push_back(m_vertices[vertIdx]);\n    m_indices[i] = newIndex;\n  } else {\n    m_indices[i] = vertexMap[m_vertices[vertIdx]];\n  }\n}\nuniqueVertices.shrink_to_fit();\nm_vertices = std::move(uniqueVertices);\nPHY_INFO("after deduplicate: {} vertices, {} indices",\n         m_vertices.size(), m_indices.size());\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u62fc\u63a5mesh")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"for (const auto &mesh: m_model->m_meshes) {\n        m_indices.reserve(m_indices.size() + mesh.indices.size());\n        auto tempSize = m_vertices.size();  // \u6613\u9519\n        for(int i = 0; i < mesh.indices.size(); i++){\n            m_indices.push_back(mesh.indices[i] + tempSize);\n        }\n        m_vertices.reserve(m_vertices.size() + mesh.vertices.size());\n        m_vertices.insert(m_vertices.end(), mesh.vertices.begin(), mesh.vertices.end());\n    }\n")),(0,i.kt)("h3",{id:"switch-case"},"switch case"),(0,i.kt)("p",null,"\u539f\u7406\u662f\u8df3\u8f6c\u5230\u76f8\u5e94\u7684case\u5f80\u4e0b\u6267\u884c\uff0c\u6240\u4ee5\u5fc5\u987b\u52a0break"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"switch(x):\ncase a:\n    break;\ncase b:\n    break;\n")),(0,i.kt)("h3",{id:"imgui-\u4e0e-renderer\u5c42\u7ea7"},"IMGUI \u4e0e renderer\u5c42\u7ea7"),(0,i.kt)("p",null,"IMGUI\u9762\u677f\u5728\u9876\u5c42\uff0c\u6240\u4ee5\u653e\u5728\u540e\u9762"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"///////////// physics\nm_physics->Update(dt);\n\n///////////// renderer\nm_camera.Update(dt);\nm_renderer.Update(m_camera);\nauto renderList = m_scene->GetObjects();\nm_renderer.Render(m_camera, renderList.cbegin(), renderList.cend());\n\n\n//////////// Gui\nm_gui->Draw(m_window.m_window);\n")),(0,i.kt)("h3",{id:"\u9f20\u6807\u5728imgui\u9762\u677f\u4e0a\u65f6\u7981\u7528\u6444\u50cf\u5934\u8f6c\u52a8"},"\u9f20\u6807\u5728IMGUI\u9762\u677f\u4e0a\u65f6\u7981\u7528\u6444\u50cf\u5934\u8f6c\u52a8"),(0,i.kt)("p",null,"\u5728gui\u7c7b\u91ccinclude Input.h\uff0c Input\u7c7b\u4e2d\u58f0\u660ebool m_mouseClickEnabled, \u540c\u65f6\u76d1\u542c\u9f20\u6807\u4e0e\u9762\u677f\u7684\u5173\u7cfb\uff0c\u5bf9m_mouseClickEnabled\u8fdb\u884c\u4fee\u6539\uff0cMouseClicked\u76d1\u542c\u4e8b\u4ef6\u52a0\u5165\u5224\u65ad"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'std::function<void(int, int, int)> mouseClicked = [&](auto button, auto action, auto mode){\n  if(m_mouseClickEnabled && button >= 0 && button < 128){\n    switch (action){\n      case GLFW_PRESS:\n        //                    PHY_INFO("press");\n        m_buttons[button] = true;\n        break;\n      case GLFW_RELEASE:\n        m_buttons[button] = false;\n        //                    PHY_INFO("release");\n        break;\n    }\n  }\n};\n')),(0,i.kt)("p",null,"gui\u7c7b\u5185"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"}," if (ImGui::IsWindowHovered())\n        {\n            // Disable mouse actions by capturing mouse input events\n//            ImGui::CaptureMouseFromApp(true);\n            Input::GetInstance().disableMouse();\n            // Optionally, you can also disable keyboard input events\n            // ImGui::CaptureKeyboardFromApp(true);\n        }else{\n            // Release mouse input events when the mouse is not hovering\n//            ImGui::CaptureMouseFromApp(false);\n            Input::GetInstance().enableMouse();\n            // Optionally, release keyboard input events\n            // ImGui::CaptureKeyboardFromApp(false);\n        }\n")),(0,i.kt)("h3",{id:"\u5168\u5c40\u53d8\u91cf-static--extern"},"\u5168\u5c40\u53d8\u91cf static / extern"),(0,i.kt)("p",null,"\u7f16\u8bd1\u5355\u5143\u5c31\u662f\u4e00\u4e2acpp\uff0c\u5e76\u4e14\u5c55\u5f00\u91cc\u9762\u6240\u6709\u7684#include"),(0,i.kt)("h4",{id:"static-\u5b9a\u4e49\u672c\u7f16\u8bd1\u5355\u5143\u7684\u5168\u5c40\u53d8\u91cf"},"static \u5b9a\u4e49\u672c\u7f16\u8bd1\u5355\u5143\u7684\u5168\u5c40\u53d8\u91cf"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"// Base.h\nstatic int x;\n\n// A.cpp (A \u7f16\u8bd1\u5355\u5143)\n#include <Base.h>\nx = 1; // A_x\n\n// B.cpp (B\u7f16\u8bd1\u5355\u5143)\n#include <Base.h>\nx = 2;  // B_x\n\n\n// A_x\u548cB_x\u5b58\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u5730\u5740 \u662f\u4e0d\u4e00\u6837\u7684\n")),(0,i.kt)("h4",{id:"extern-\u58f0\u660e\u672c\u7f16\u8bd1\u5355\u5143\u6216\u5176\u4ed6\u7f16\u8bd1\u5355\u5143\u7684\u5168\u5c40\u53d8\u91cf"},"extern \u58f0\u660e\u672c\u7f16\u8bd1\u5355\u5143\u6216\u5176\u4ed6\u7f16\u8bd1\u5355\u5143\u7684\u5168\u5c40\u53d8\u91cf"),(0,i.kt)("p",null,"\u9996\u5148\u662f",(0,i.kt)("strong",{parentName:"p"},"\u5b9a\u4e49"),"\u548c",(0,i.kt)("strong",{parentName:"p"},"\u58f0\u660e"),"\u7684\u533a\u522b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"int x; // \u5b9a\u4e49 \u672a\u521d\u59cb\u5316\nint y = 1; // \u5b9a\u4e49 \u5e76\u521d\u59cb\u5316\nextern int x; // \u58f0\u660e\nextern int x = 0; // \u5b9a\u4e49\uff0c\u80fd\u7f16\u8bd1\u4f46\u4e00\u822c\u4e0d\u8fd9\u4e48\u7528\n")),(0,i.kt)("p",null,"\u8fd9\u91cc\u7684\u5168\u5c40\uff0c\u53ea\u80fd\u7528\u4e8e",(0,i.kt)("strong",{parentName:"p"},"\u76f8\u4e92\u94fe\u63a5"),"\u7684\u67d0\u4e00\u4e2a\u6216\u51e0\u4e2a\u5e93(STATIC, SHARED\u90fd\u53ef\u4ee5)\u3001\u6216executable"),(0,i.kt)("p",null,"\u76f8\u4e92\u94fe\u63a5\u662f\u901a\u8fc7",(0,i.kt)("inlineCode",{parentName:"p"},"target_link_libraries(lib_a PUBLIC lib_b)")),(0,i.kt)("p",null,"\u5728\u6253\u5305\u67d0\u4e00\u4e2a\u5e93\u65f6\uff0c\u5fc5\u987b\u4fdd\u8bc1\u4ed6\u7528\u5230\u7684\u5168\u5c40\u53d8\u91cf\u5728","[\u8fd9\u4e2a\u5e93\u6216\u4ed6\u94fe\u63a5\u7684\u5e93\u5185\u90e8]",(0,i.kt)("strong",{parentName:"p"},"\u5b9a\u4e49")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"add_library(render A.cpp B.cpp C.cpp)\n  \nadd_library(physic D.cpp)  \ntarget_link_libraries(physic render) \n  // physics\u53ea\u80fd\u7528render\uff0cphysics\u91cc\u5b9a\u4e49\u7684\u5168\u5c40\u53d8\u91cf\n  // \u800crender\u5e76\u4e0d\u80fd\u7528physics\u91cc\u5b9a\u4e49\u7684\u5168\u5c40\u53d8\u91cf\n  \n  \nadd_executable(main main.cpp)\ntarget_link_libraries(main render physic) \n  // main\u53ea\u80fd\u7528render\uff0cphysics\u91cc\u5b9a\u4e49\u7684\u5168\u5c40\u53d8\u91cf\n  // \u800crender,physics\u5e76\u4e0d\u80fd\u7528main\u91cc\u5b9a\u4e49\u7684\u5168\u5c40\u53d8\u91cf\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"// case 0\nadd_executable(main A.cpp B.cpp C.cpp)\n  \n// case 1\n// D.cpp\u67e5\u627e\u4e0d\u5230A.cpp\u4e2d\u5b9a\u4e49\u7684\u5168\u5c40\u53d8\u91cf\n//  Undefined symbols\n// \u56e0\u4e3aphysic\u548crender\u662f\u4e24\u4e2a\u72ec\u7acb\u7684\u5e93\uff0c\u6240\u4ee5\u4e92\u76f8\u67e5\u4e0d\u5230 \u53ef\u4ee5\u901a\u8fc7target_link_libraries(physic render)\u89e3\u51b3\nadd_library(render A.cpp B.cpp C.cpp)\nadd_library(physic D.cpp)  \nadd_executable(main main.cpp)\ntarget_link_libraries(main render physic)\n  \n// case 2\n// \u53ef\u4ee5\u7684 \u56e0\u4e3amain\u94fe\u63a5\u4e86render\u5e93\nadd_library(render A.cpp B.cpp C.cpp)\nadd_executable(main main.cpp)\ntarget_link_libraries(main render)\n")),(0,i.kt)("p",null,"\u5728\u67d0\u4e00\u4e2a\u6a21\u5757\u91cc",(0,i.kt)("strong",{parentName:"p"},"\u5b9a\u4e49"),"\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u5728\u672c\u6a21\u5757\u6216\u5176\u4ed6\u6a21\u5757\u4f7f\u7528\u8fd9\u4e2a\u5168\u5c40\u53d8\u91cf\u9700\u8981",(0,i.kt)("strong",{parentName:"p"},"\u58f0\u660e")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u5fc5\u987b\u5728cpp\u4e2d",(0,i.kt)("strong",{parentName:"li"},"\u5b9a\u4e49"),"\u5168\u5c40\u53d8\u91cf\uff0c\u5426\u5219\u53ef\u80fd\u4f1aredefinition error")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"// A.cpp\nint x; // \u6ce8\u610f\u8fd9\u662f\u5b9a\u4e49\uff0c\u53ea\u662f\u6ca1\u6709\u521d\u59cb\u5316\nvoid f(){\n  x = 5;\n}\n\n// B.cpp\nextern int x; // \u52a0\u4e86extern\u8868\u793a\u58f0\u660e\nx = 6;\n\n// C.cpp\nextern int x; // \u52a0\u4e86extern\u8868\u793a\u58f0\u660e\nstd::cout << x;\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u5728header\u4e2d\u58f0\u660e\uff0c\u7528\u4e8e\u7b80\u5316")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"// A.cpp\nint x; // \u6ce8\u610f\u8fd9\u662f\u5b9a\u4e49\uff0c\u53ea\u662f\u6ca1\u6709\u521d\u59cb\u5316\nvoid f(){\n  x = 5;\n}\n\n// Base.h\nextern int x;// \u52a0\u4e86extern\u8868\u793a\u58f0\u660e\n\n// B.cpp\n#include <Base.h> \nx = 6;\n\n// C.cpp\n#include <Base.h>\nstd::cout << x;\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u5728header\u4e2d\u5b9a\u4e49\u7684\u8bdd")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'////// \u6b63\u786e\n// A.h\nextern int x; // \u58f0\u660e \u5728\u672c\u6a21\u5757\u6216\u5176\u4ed6\u6a21\u5757\u5b58\u5728x\u7684\u5b9a\u4e49\n\n// A.cpp\n#include "A.h"\nint x = 5;\nint main(){\n    std::cout << x;\n}\n\n\n////// \u9519\u8bef redifinition\n// A.h\nextern int x = 0; // \u8fd9\u662f\u5b9a\u4e49\n\n// A.cpp\nint x = 5;\nint main(){\n    std::cout << x;\n}\n')),(0,i.kt)("h4",{id:"\u5b9e\u8df5"},"\u5b9e\u8df5"),(0,i.kt)("p",null,"\u5728demo\u91cc\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf\uff0c\u63a7\u5236imgui\u4e8b\u4ef6\u5bf9\u6e32\u67d3\u3001\u4eff\u771f\u7ed3\u679c\u505a\u51fa\u6539\u53d8"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"// demo.cpp\n\n// \u5b9a\u4e49\u53ea\u5728demo.cpp\u4f1a\u7528\u5230\u7684\u53d8\u91cf\nnamespace control{\n    static geo::BVHNode* currNode;\n    static vec3 ground_color = {0.2, 0.4, 0.6};\n    static vec3 ground_pos = vec3(0, -1.2, 0);\n    static vec3 ground_halfSize = vec3(100, 1.2, 100);\n    static int show_level = 10;\n}\n\n// \u58f0\u660e\u9700\u8981\u53bb\u5916\u90e8\u627e\u7684\u53d8\u91cf\nnamespace control{\n    extern vec4 clear_color;\n    extern geo::BVHSplitStrategy bvh_strategy;\n}\nvoid f(){control::clear_color ....}\n\n// RenderSystem.cpp\n// \u58f0\u660e\u9700\u8981\u53bb\u5916\u90e8\u627e\u7684\u53d8\u91cf\nnamespace control{\n    extern vec4 clear_color;\n}\nvoid f(){control::clear_color ....}\n\n// GuiSystem.cpp\n// \u5b9a\u4e49\u5168\u5c40\u53d8\u91cf\nnamespace control{\n    vec4 clear_color = vec4(0.45f, 0.55f, 0.60f, 1.00f);\n}\n\n\n// \u5305\u542b\u5173\u7cfb\nadd_library(Gui GuiSystem.cpp)\n  \nadd_library(RenderSystem RenderSystem.cpp)\ntarget_link_libraries(RenderSystem Gui)\n\nadd_executable(demo demo.cpp)\ntarget_link_libraries(demo RenderSystem Gui)\n\n")),(0,i.kt)("h3",{id:"\u865a\u51fd\u6570"},"\u865a\u51fd\u6570"),(0,i.kt)("p",null,"Derived\u7c7b\u7684\u7b2c\u4e00\u4e2a\u865a\u51fd\u6570\u5fc5\u987b\u5b9a\u4e49\uff0c\u53ea\u58f0\u660e\u4e0d\u5b9a\u4e49\u4f1a\u62a5\u9519"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'Undefined symbols for architecture x86_64:\n  "vtable for Cloth", referenced from:\n      ActorBase<geo::Model>::InitPhysicsObject() in BVHTest.cpp.o\n  NOTE: a missing vtable usually means the first non-inline virtual member function has no definition.\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u865a\u51fd\u6570\u7684\u9ed8\u8ba4\u53c2\u6570\u4e0d\u4f1a\u88ab\u7ee7\u627f"),"\uff0c\u901a\u8fc7\u4ec0\u4e48\u7c7b\u578b\u7684\u6307\u9488\u8c03\u7528\uff0c\u5c31\u4f1a\u7528\u5bf9\u5e94\u7684\u9ed8\u8ba4\u53c2\u6570"),(0,i.kt)("h3",{id:"opengl"},"opengl"),(0,i.kt)("p",null,"glDrawElement \u5982\u679c\u753b\u7684\u662f\u4e09\u89d2\u5f62primitive\uff0c\u5e76\u4e14ebo\u51fa\u73b0 \uff081\uff0c1\uff0c0\uff09\u8fd9\u6837\u91cd\u590d\u7684\u9876\u70b9\u4f1a\u62a5\u9519"),(0,i.kt)("h3",{id:"texture-uv\u5750\u6807"},"Texture uv\u5750\u6807"),(0,i.kt)("p",null,"stb_image\u8bfb\u53d6\u7684\u56fe\u7247\u548copengl\u6e32\u67d3\u7ba1\u7ebf\u8bfb\u5165\u7684 y\u5750\u6807\u8981\u8fd4\u8f6c\u4e00\u4e0b"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://gamedev.stackexchange.com/questions/140789/texture-coordinates-seem-to-have-flipped-or-incorrect-position"},"https://gamedev.stackexchange.com/questions/140789/texture-coordinates-seem-to-have-flipped-or-incorrect-position")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"m_coord[i] = vec2(vertices[i].TextureCoordinate.X,\n                  1- vertices[i].TextureCoordinate.Y);\n")))}u.isMDXComponent=!0},9181:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/image-20230530004420139-65dadeedc1ac5755f0ab41c21b0ef899.png"},9247:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/image-20230601162356773-434aa70b59167eae3d27659a574ebe80.png"},3515:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/image-20230610133059596-5e33db0d55919bfe2bbe5b5a437ec055.png"},7657:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/image-20230617225252412-4925b805b11c6fc54b5330793335dca4.png"},2200:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/image-20230617225755140-9d90ec386d1923b7ee204038f4124491.png"}}]);