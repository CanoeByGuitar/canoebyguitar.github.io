"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[43],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>k});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=a.createContext({}),m=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=m(e.components);return a.createElement(i.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=m(t),u=o,k=c["".concat(i,".").concat(u)]||c[u]||d[u]||s;return t?a.createElement(k,r(r({ref:n},p),{},{components:t})):a.createElement(k,r({ref:n},p))}));function k(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,r=new Array(s);r[0]=u;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[c]="string"==typeof e?e:o,r[1]=l;for(var m=2;m<s;m++)r[m]=t[m];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5055:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>m});var a=t(7462),o=(t(7294),t(3905));const s={title:"UE\u52a8\u753b\u6a21\u5757\u6d45\u6790",tags:["UE"]},r=void 0,l={permalink:"/blog/Unreal/UE\u52a8\u753b\u6a21\u5757\u6d45\u6790/1",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/Unreal/UE\u52a8\u753b\u6a21\u5757\u6d45\u6790/1.md",source:"@site/blog/Unreal/UE\u52a8\u753b\u6a21\u5757\u6d45\u6790/1.md",title:"UE\u52a8\u753b\u6a21\u5757\u6d45\u6790",description:"\u52a8\u753b\u878d\u5408\u65b9\u5f0f",date:"2024-07-07T18:07:01.000Z",formattedDate:"July 7, 2024",tags:[{label:"UE",permalink:"/blog/tags/ue"}],readingTime:18.95,hasTruncateMarker:!0,authors:[],frontMatter:{title:"UE\u52a8\u753b\u6a21\u5757\u6d45\u6790",tags:["UE"]},prevItem:{title:"Lyra\u6d45\u6790",permalink:"/blog/Unreal/Lyra\u6d45\u6790/1"},nextItem:{title:"UE\u7c7b\u578b\u7cfb\u7edf",permalink:"/blog/Unreal/UE\u7c7b\u578b\u7cfb\u7edf/1"}},i={authorsImageUrls:[]},m=[{value:"\u52a8\u753b\u878d\u5408\u65b9\u5f0f",id:"\u52a8\u753b\u878d\u5408\u65b9\u5f0f",level:2},{value:"\u4f20\u7edf\u52a8\u753b\u878d\u5408",id:"\u4f20\u7edf\u52a8\u753b\u878d\u5408",level:3},{value:"\u60ef\u6027\u878d\u5408Inertialization",id:"\u60ef\u6027\u878d\u5408inertialization",level:3},{value:"Additive\u52a8\u753b",id:"additive\u52a8\u753b",level:2},{value:"Animation Montage",id:"animation-montage",level:2},{value:"\u91cd\u5b9a\u5411",id:"\u91cd\u5b9a\u5411",level:2},{value:"\u8d44\u4ea7\u7c7b",id:"\u8d44\u4ea7\u7c7b",level:2},{value:"\u5bfc\u5165\u8fc7\u7a0b",id:"\u5bfc\u5165\u8fc7\u7a0b",level:3},{value:"USkeleton",id:"uskeleton",level:3},{value:"BoneTree",id:"bonetree",level:4},{value:"FReferenceSkeleton",id:"freferenceskeleton",level:4},{value:"FSmartNameCnntainer",id:"fsmartnamecnntainer",level:4},{value:"SkeletalMesh",id:"skeletalmesh",level:3},{value:"UAnimationSequence",id:"uanimationsequence",level:3},{value:"UAnimInstance\u548cFAnimInstanceProxy",id:"uaniminstance\u548cfaniminstanceproxy",level:2},{value:"\u52a8\u753b\u84dd\u56fe",id:"\u52a8\u753b\u84dd\u56fe",level:2},{value:"\u52a8\u753b\u84dd\u56fe\u6267\u884c\u6d41\u7a0b",id:"\u52a8\u753b\u84dd\u56fe\u6267\u884c\u6d41\u7a0b",level:3},{value:"\u5206\u53d1\u5230\u5de5\u4f5c\u7ebf\u7a0b\u7684\u65b9\u5f0f",id:"\u5206\u53d1\u5230\u5de5\u4f5c\u7ebf\u7a0b\u7684\u65b9\u5f0f",level:3},{value:"\u4e3e\u4f8b\u51e0\u4e2aAnimNode",id:"\u4e3e\u4f8b\u51e0\u4e2aanimnode",level:3},{value:"FAnimNode_TwoBoneIK",id:"fanimnode_twoboneik",level:4},{value:"FAnimNode_SequencePlayer",id:"fanimnode_sequenceplayer",level:4},{value:"\u81ea\u5b9a\u4e49 FAnimNode_PSD",id:"\u81ea\u5b9a\u4e49-fanimnode_psd",level:4},{value:"Fast Path",id:"fast-path",level:3}],p={toc:m},c="wrapper";function d(e){let{components:n,...s}=e;return(0,o.kt)(c,(0,a.Z)({},p,s,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"ue\u52a8\u753b\u5e38\u7528\u64cd\u4f5c"},"UE\u52a8\u753b\u5e38\u7528\u64cd\u4f5c"),(0,o.kt)("h2",{id:"\u52a8\u753b\u878d\u5408\u65b9\u5f0f"},"\u52a8\u753b\u878d\u5408\u65b9\u5f0f"),(0,o.kt)("h3",{id:"\u4f20\u7edf\u52a8\u753b\u878d\u5408"},"\u4f20\u7edf\u52a8\u753b\u878d\u5408"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"alt text",src:t(1068).Z,width:"644",height:"292"})),(0,o.kt)("p",null,"Blend\u90a3\u4e00\u6bb5\u9700\u8981\u8ba1\u7b97\u4e24\u7aef\u52a8\u753b\u4ee5\u53ca\u4ed6\u4eec\u7684\u6df7\u5408\uff0c\u76f8\u5f53\u4e8e\u53cc\u500d\u7684\u52a8\u753b\u5f00\u9500"),(0,o.kt)("h3",{id:"\u60ef\u6027\u878d\u5408inertialization"},"\u60ef\u6027\u878d\u5408Inertialization"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u73b0\u5b9e\u91cc\u4e0d\u4f1a\u6df7\u5408\uff08\u6325\u624b\u540e\u653e\u4e0b\uff0c\u800c\u4e0d\u4f1a\u8fb9\u6325\u624b\u8fb9\u653e\u4e0b\uff09"),(0,o.kt)("li",{parentName:"ul"},"\u4e0d\u8fdb\u884cblend\uff0c\u800c\u662f\u540e\u5904\u7406\u89e3\u51b3\u4e0d\u8fde\u7eed\u6027")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"alt text",src:t(2255).Z,width:"646",height:"95"})),(0,o.kt)("p",null,"\u4e0b\u9762\u7684\u66f2\u7ebf\uff0c\u662fsequence1 - sequence2\uff0c \u8981\u505a\u7684\u5de5\u4f5c\u662f\u628a\u4ed6\u4eec\u7684\u5dee\u503c\u7f13\u6162\u6d88\u9664"),(0,o.kt)("p",null,"\u63d2\u503c\u6210\u5173\u4e8et\u7684\u4e94\u6b21\u51fd\u6570\uff0c\u53c2\u6570\u7531fade-off\u65f6\u95f4\u3001\u4e24\u7aef\u5e8f\u5217\u9996\u4f4d\u7684\u4f4d\u7f6e\u5dee\u548c\u901f\u5ea6\u5dee \u63a7\u5236"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"alt text",src:t(1103).Z,width:"651",height:"253"})),(0,o.kt)("h2",{id:"additive\u52a8\u753b"},"Additive\u52a8\u753b"),(0,o.kt)("p",null,"\u7528\u6765\u5bf9Base Pose\u53e0\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u6548\u679c\uff0c\u6bd4\u5982\u8fd0\u52a8\u72b6\u6001\u53d7\u51fb\u7684\u8f7b\u5fae\u53cd\u9988\u3001\u7784\u51c6\u72b6\u6001\u5f00\u67aa\u540e\u7684\u540e\u5750\u529b\u6548\u679c\u3002\n",(0,o.kt)("img",{alt:"alt text",src:t(3471).Z,width:"873",height:"415"}),"\n\u8bbeBase Pose\u7684Transform\u77e9\u9635\u4e3aB\uff08\u6240\u6709joint\uff09\uff0cReference Pose\u4e3aR\uff0cAdditive Pose\uff08\u8fd9\u91cc\u6307\u88ab\u51cf\u6570\u90a3\u4e2aPose\uff09\u4e3aA\uff0c\u90a3\u4e48Final Pose ",(0,o.kt)("span",{parentName:"p",className:"math math-inline"},(0,o.kt)("span",{parentName:"span",className:"katex"},(0,o.kt)("span",{parentName:"span",className:"katex-mathml"},(0,o.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,o.kt)("semantics",{parentName:"math"},(0,o.kt)("mrow",{parentName:"semantics"},(0,o.kt)("mi",{parentName:"mrow"},"F"),(0,o.kt)("mo",{parentName:"mrow"},"="),(0,o.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,o.kt)("msup",{parentName:"mrow"},(0,o.kt)("mi",{parentName:"msup"},"R"),(0,o.kt)("mrow",{parentName:"msup"},(0,o.kt)("mo",{parentName:"mrow"},"\u2212"),(0,o.kt)("mn",{parentName:"mrow"},"1"))),(0,o.kt)("mi",{parentName:"mrow"},"A"),(0,o.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,o.kt)("mi",{parentName:"mrow"},"B")),(0,o.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"F = (R^{-1}A)B")))),(0,o.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,o.kt)("span",{parentName:"span",className:"base"},(0,o.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,o.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"F"),(0,o.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,o.kt)("span",{parentName:"span",className:"mrel"},"="),(0,o.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,o.kt)("span",{parentName:"span",className:"base"},(0,o.kt)("span",{parentName:"span",className:"strut",style:{height:"1.064108em",verticalAlign:"-0.25em"}}),(0,o.kt)("span",{parentName:"span",className:"mopen"},"("),(0,o.kt)("span",{parentName:"span",className:"mord"},(0,o.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.00773em"}},"R"),(0,o.kt)("span",{parentName:"span",className:"msupsub"},(0,o.kt)("span",{parentName:"span",className:"vlist-t"},(0,o.kt)("span",{parentName:"span",className:"vlist-r"},(0,o.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141079999999999em"}},(0,o.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,o.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,o.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,o.kt)("span",{parentName:"span",className:"mord mtight"},(0,o.kt)("span",{parentName:"span",className:"mord mtight"},"\u2212"),(0,o.kt)("span",{parentName:"span",className:"mord mtight"},"1"))))))))),(0,o.kt)("span",{parentName:"span",className:"mord mathnormal"},"A"),(0,o.kt)("span",{parentName:"span",className:"mclose"},")"),(0,o.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05017em"}},"B")))))),(0,o.kt)("p",null,"\u4e0b\u56fe1\u4e3aBasePose\uff0cAddtive Pose\u4e3a\u5411\u4e0a\u7784\u51c6\uff0c\u56fe2\u91c7\u7528Local Space Additive\uff0c\u628aAddtive Pose\u57fa\u4e8e\u7236\u9aa8\u9abc\u7684Transform\u53e0\u52a0\u5230Base Pose\u7684\u7236\u9aa8\u9abc\u4e0a\uff0c\u4f1a\u5bfc\u81f4\u7784\u51c6\u6b6a\u6389\uff0c\u4e0d\u518d\u662f\u9884\u671f\u7684\u6b63\u4e0a\u65b9\u3002\u800c\u56fe3\u91c7\u7528Mesh Space Additive\uff0c\u628aAddtive Pose\u57fa\u4e8eroot\u7684Transform\u53e0\u52a0\u5230\u7236\u9aa8\u9abc\u4e0a,\u8fd9\u91cc\u4f1a\u8fdb\u884c\u4e00\u6b21\u5750\u6807\u7cfb\u8f6c\u6362\uff1aTransform\u77e9\u9635\u4eceMesh Space => Local Space,\u56e0\u6b64\u5f00\u9500\u6bd4\u8f83\u5927\u3002\n",(0,o.kt)("img",{alt:"alt text",src:t(224).Z,width:"995",height:"592"})),(0,o.kt)("p",null," ",(0,o.kt)("span",{parentName:"p",className:"math math-inline"},(0,o.kt)("span",{parentName:"span",className:"katex"},(0,o.kt)("span",{parentName:"span",className:"katex-mathml"},(0,o.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,o.kt)("semantics",{parentName:"math"},(0,o.kt)("mrow",{parentName:"semantics"},(0,o.kt)("mi",{parentName:"mrow"},"F"),(0,o.kt)("mo",{parentName:"mrow"},"="),(0,o.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,o.kt)("msup",{parentName:"mrow"},(0,o.kt)("mi",{parentName:"msup"},"R"),(0,o.kt)("mrow",{parentName:"msup"},(0,o.kt)("mo",{parentName:"mrow"},"\u2212"),(0,o.kt)("mn",{parentName:"mrow"},"1"))),(0,o.kt)("mi",{parentName:"mrow"},"A"),(0,o.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,o.kt)("mi",{parentName:"mrow"},"B")),(0,o.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"F = (R^{-1}A)B")))),(0,o.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,o.kt)("span",{parentName:"span",className:"base"},(0,o.kt)("span",{parentName:"span",className:"strut",style:{height:"0.68333em",verticalAlign:"0em"}}),(0,o.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"F"),(0,o.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}}),(0,o.kt)("span",{parentName:"span",className:"mrel"},"="),(0,o.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2777777777777778em"}})),(0,o.kt)("span",{parentName:"span",className:"base"},(0,o.kt)("span",{parentName:"span",className:"strut",style:{height:"1.064108em",verticalAlign:"-0.25em"}}),(0,o.kt)("span",{parentName:"span",className:"mopen"},"("),(0,o.kt)("span",{parentName:"span",className:"mord"},(0,o.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.00773em"}},"R"),(0,o.kt)("span",{parentName:"span",className:"msupsub"},(0,o.kt)("span",{parentName:"span",className:"vlist-t"},(0,o.kt)("span",{parentName:"span",className:"vlist-r"},(0,o.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141079999999999em"}},(0,o.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,o.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,o.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,o.kt)("span",{parentName:"span",className:"mord mtight"},(0,o.kt)("span",{parentName:"span",className:"mord mtight"},"\u2212"),(0,o.kt)("span",{parentName:"span",className:"mord mtight"},"1"))))))))),(0,o.kt)("span",{parentName:"span",className:"mord mathnormal"},"A"),(0,o.kt)("span",{parentName:"span",className:"mclose"},")"),(0,o.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05017em"}},"B"))))),"\u5728UE\u4e2d\u7684\u5b9e\u73b0\u5982\u4e0b"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"// FAnimationRuntime::AccumulateLocalSpaceAdditivePoseInternal\n// \u8fd9\u91cc\u7684RTS\u90fd\u662fBasePose\u7684\u6210\u5458\u53d8\u91cf\nRotation = VectorQuaternionMultiply2(BlendedRotation, Rotation);\nTranslation = VectorMultiplyAdd(Atom.Translation, BlendWeight, Translation);\nScale3D = VectorMultiply(Scale3D, VectorMultiplyAdd(Atom.Scale3D, BlendWeight, DefaultScale));\n")),(0,o.kt)("p",null,"Mesh Space\u7684\u8bdd\u4f1a\u6709\u989d\u5916\u4e24\u6b65\n",(0,o.kt)("img",{alt:"alt text",src:t(1695).Z,width:"1224",height:"263"}),"\n\u8fd9\u91cc\u53ef\u4ee5\u770b\u51faMesh Space\u5c31\u662fRoot\u7684Space,\u5bf9\u4e8e\u4e00\u6761\u9aa8\u9abc\u94fe\uff0clocal space\u7684rotation\u5206\u522b\u4e3aR0,R1,R2, \u90a3\u4e48Orientation2 = R0 ",(0,o.kt)("em",{parentName:"p"}," R1 ")," R2(\u60f3\u8c61\u673a\u68b0\u81c2\u4ece\u672b\u7aef\u5411root\u4f9d\u6b21\u65cb\u8f6c)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"for (FCompactPoseBoneIndex BoneIndex(1); BoneIndex < LocalPose.GetNumBones(); ++BoneIndex)\n{\n    const FCompactPoseBoneIndex ParentIndex = LocalPose.GetParentBoneIndex(BoneIndex);\n\n    const FQuat MeshSpaceRotation = LocalPose[ParentIndex].GetRotation() * LocalPose[BoneIndex].GetRotation();\n    LocalPose[BoneIndex].SetRotation(MeshSpaceRotation);\n}\n")),(0,o.kt)("p",null,"\u8fd9\u91cc\u6ce8\u610f,ue\u7684FMatrix\u662f",(0,o.kt)("a",{parentName:"p",href:"https://mobile.rodolphe-vaillant.fr/entry/145/unreal-engine-c-tmap-doc-sheet-1"},"row-matrix\u9700\u8981\u53f3\u4e58"),"\uff0c\u4f46TQuat\u662f\u5de6\u4e58\u3002"),(0,o.kt)("h2",{id:"animation-montage"},"Animation Montage"),(0,o.kt)("p",null,"\u7528\u6765\u628a\u591a\u4e2aAnimSequence\u5408\u5728\u4e00\u8d77\u6839\u636egame\u903b\u8f91\u6309\u4efb\u610f\u987a\u5e8f\u8fdb\u884c\u64ad\u653e\uff0c\u4e00\u4e9b\u57fa\u672c\u7684\u6982\u5ff5\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Section: \u628a\u65f6\u95f4\u8f74\u5206\u4e3a\u591a\u4e2asection\uff0c\u6bcf\u4e2asection\u53ef\u4ee5\u653e\u4e00\u6bb5Sequence\uff0c\u53ef\u4ee5\u6839\u636e\u903b\u8f91\u5207\u6362\u64ad\u653e\u6bcf\u4e00\u6bb5section\uff0c\u4e5f\u53ef\u4ee5\u8bbe\u7f6esection\u4e4b\u95f4\u7684\u6df7\u5165"),(0,o.kt)("li",{parentName:"ul"},"Slot/Slot Group: Slot\u53ef\u4ee5\u8986\u76d6\u4e00\u4e2amesh\u6216\u4e00\u4e2a\u5b50mesh\uff08\u6bd4\u5982FullBody/UpperBody\uff09\uff0cSlot\u5728\u8499\u592a\u5947\u5185\u8bbe\u7f6e\uff0c\u53ef\u4ee5\u5305\u542b\u4e00\u4e9bAnimSequence\uff0c\u8bbe\u7f6e\u597dslot\u540e\u5c31\u53ef\u4ee5\u5728ABP\u4e2d\u4f7f\u7528\uff0c\u5982\u4e0b\u56fe\uff0cSlot\u8282\u70b9\u5728\u89e6\u53d1\u64ad\u653e\u524d\u4f1a\u4f7f\u7528Source\uff0c\u6bd4\u5982Locomotion\uff0c\u800c\u5728\u89e6\u53d1\u540e\uff08\u6bd4\u5982\u89d2\u8272\u6309\u7279\u5b9a\u952e\uff09\u4f1aoverride source\u52a8\u753b\u3002\n",(0,o.kt)("img",{alt:"alt text",src:t(5327).Z,width:"1590",height:"576"}),"\n\u4e0a\u56fe\u4e2d\uff0cFullBody slot\u53ef\u4ee5\u8fdb\u884c\u8868\u60c5\uff0c\u800cUpperBody\u53ef\u4ee5\u653e\u624b\u90e8\u52a8\u753b\u6bd4\u5982\u6362\u5f39\u3002")),(0,o.kt)("h2",{id:"\u91cd\u5b9a\u5411"},"\u91cd\u5b9a\u5411"),(0,o.kt)("p",null,"Sequence A\u7684Skeleton\u662fS1\uff0c \u628aSequence A\u5e94\u7528\u5230Skeleton S2\u4e0a\uff0c\u8981\u89e3\u51b3\u4e24\u70b9\uff1a"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\u5efa\u7acb\u9aa8\u9abc\u5bf9\u5e94\u5173\u7cfb\uff1a\u9aa8\u9abc\u540d\u79f0\u4e0d\u540c / \u9aa8\u9abc\u6570\u91cf\u4e0d\u540c / \u9aa8\u9abc\u957f\u5ea6\u4e0d\u540c"),(0,o.kt)("li",{parentName:"ol"},"S1\u7684\u521d\u59cbPose\u548cS2\u7684\u521d\u59cbPose\u53ef\u80fd\u4e0d\u540c\uff08\u6bd4\u5982\u4e00\u4e2aA-Pose \u53e6\u4e00\u4e2aT-Pose\uff09\uff0c\u56e0\u6b64\u67d0\u4e00\u5e27\u52a8\u753b\uff0c\u8c03\u6574\u5230\u540c\u4e00Pose\u6240\u9700\u8981\u7684transform\u662f\u4e0d\u540c\u7684\u3002")),(0,o.kt)("h1",{id:"\u6e90\u7801\u5256\u6790"},"\u6e90\u7801\u5256\u6790"),(0,o.kt)("h2",{id:"\u8d44\u4ea7\u7c7b"},"\u8d44\u4ea7\u7c7b"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mermaid"},"classDiagram\n UObject o-- UAnimationAsset\n\nUAnimationAsset o--  UAnimationSequeceBase \n\nUAnimationAsset   o-- UBlendSpaceBase\nUAnimationAsset : USkeleton *\n\n UAnimationSequeceBase o--  UAnimCompositeBase \nUAnimationSequeceBase  o-- UAnimSequence\n\nUAnimCompositeBase  o-- UAnimComposite\nUAnimCompositeBase  o-- UAnimMontage\n")),(0,o.kt)("h3",{id:"\u5bfc\u5165\u8fc7\u7a0b"},"\u5bfc\u5165\u8fc7\u7a0b"),(0,o.kt)("p",null,"FBX\u5bfc\u5165\u540e\u4e00\u822c\u4f1a\u51fa\u73b0\u8fd9\u51e0\u4e2a\u8d44\u4ea7"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"alt text",src:t(4994).Z,width:"358",height:"181"})),(0,o.kt)("p",null,"\u63a5\u4e0b\u6765\u7684\u89e3\u6790\u901a\u8fc7UFbxFactory::FactoryCreateFile\u6765\u65ad\u70b9\u8c03\u8bd5"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"USkeletalMesh* BaseSkeletalMesh = nullptr;\nBaseSkeletalMesh = FbxImporter->ImportSkeletalMesh( ImportSkeletalMeshArgs );\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"USkeletalMesh* UnFbx::FFbxImporter::ImportSkeletalMesh(FImportSkeletalMeshArgs &ImportSkeletalMeshArgs)\n{\n    // \u5bfc\u5165\u7684fbx\u4e2d\u7684\u6240\u6709\u6570\u636e\n    FSkeletalMeshImportData* SkelMeshImportDataPtr = nullptr;\n    FillSkeletalMeshImportData(SkelMeshImportDataPtr, ...);\n\n    // \u6700\u7ec8\u8981\u8f93\u51fa\u7684skeletalmesh\n    USkeletalMesh* SkeletalMesh = nullptr;\n\n    \n    // \u5199\u5165USkeletalMesh\u7684RefSkeleton\u6210\u5458\n    SkeletalMeshImportUtils::ProcessImportMeshSkeleton( SkeletalMesh->GetRefSkeleton(),*SkelMeshImportDataPtr, ...);\n\n    // \u5199\u5165LOD\u8499\u76ae\u6570\u636e\n    FSkeletalMeshBuildParameters SkeletalMeshBuildParameters(SkeletalMesh, GetTargetPlatformManagerRef().GetRunningTargetPlatform(), ImportLODModelIndex, bRegenDepLODs);\n    bBuildSuccess = MeshBuilderModule.BuildSkeletalMesh(SkeletalMeshBuildParameters);\n    \n}\n")),(0,o.kt)("p",null,"\u5199\u5165USkeletalMesh\u7684RefSkeleton"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"TArray <SkeletalMeshImportData::FBone>& RefBonesBinary = ImportData.RefBonesBinary;\nRefSkeleton.Empty();\n\n// \u7528FReferenceSkeletonModifier\u5bf9RefSkeleton\u4f5c\u51fa\u4fee\u6539\nFReferenceSkeletonModifier RefSkelModifier(RefSkeleton, SkeletonAsset);\nfor (int32 b = 0; b < RefBonesBinary.Num(); b++){\n    const SkeletalMeshImportData::FBone & BinaryBone = RefBonesBinary[b];\n    const FString BoneName = FSkeletalMeshImportData::FixupBoneName(BinaryBone.Name);\n    // \u9aa8\u9abc\u7ed3\u6784\uff0c\u9759\u6001\u5b58\u50a8\u7684\u6811\u4ee5\u53ca\u5bf9\u5e94\u7684transform\n    const FMeshBoneInfo BoneInfo(FName(*BoneName, FNAME_Add), BinaryBone.Name, BinaryBone.ParentIndex);\n    const FTransform BoneTransform(BinaryBone.BonePos.Transform);\n\n    RefSkelModifier.Add(BoneInfo, BoneTransform);\n}\n\n\n")),(0,o.kt)("p",null,"\u5199\u5165LOD\u8499\u76ae\u6570\u636e"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"// Engine/Source/Developer/MeshBuilder/Private/SkeletalMeshBuilder.cpp\n\n// \u628aLOD Mesh\u6570\u636e\u5b58\u5165 USkeletalMesh.ImportedModel;\nFSkeletalMeshLODModel& BuildLODModel = SkeletalMesh->GetImportedModel()->LODModels[LODIndex];\nMeshUtilities.BuildSkeletalMesh(\n            BuildLODModel, \n            SkeletalMesh->GetPathName(),\n            RefSkeleton,\n            LODInfluences,\n            LODWedges,\n            LODFaces,\n            LODPoints,\n            LODPointToRawMap,\n            Options\n        );\n")),(0,o.kt)("h3",{id:"uskeleton"},"USkeleton"),(0,o.kt)("p",null,"USkeleton\u662fUAnimationAsset\u7684\u6210\u5458"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class USkeleton{\nprivate:\n\nUPROPERTY(VisibleAnywhere, Category=Skeleton)\nTArray<struct FBoneNode> BoneTree;\n\nFReferenceSkeleton ReferenceSkeleton;\n\npublic:\nTArray<USkeletalMeshSocket*> Sockets;\nTMap< FName, FReferencePose > AnimRetargetSources;\n\n// FSmartNameContainer\u7531\u4e24\u4e2amap\u7ec4\u6210\n// NameMapings: {FName : {[{CurveFName0, MetaData0}, {CurveFName1, MetaData1}, ... , {CurveFNameN, MetaDataN}]}}\n// LoadedMappings\uff1a{FName : {[{CurveFName0, MetaData0}, {CurveFName1, MetaData1}, ... , {CurveFNameN, MetaDataN}]}}\nFSmartNameContainer SmartNames;\n}\n\n\n// \u7528\u6765\u5728SkeletalMesh\u4e2d\u6302\u8f7d\u5176\u4ed6mesh\uff0c\u6bd4\u5982\u6b66\u5668\u3002\n// \u6ca1\u6709\u8fd9\u4e2a\u7684\u8bdd\u5c31\u53ea\u80fd\u5728Actor\u7684SkeletalMeshComponent\u4e0battach\u6b66\u5668\nclass USkeletalMeshSocket{\n    FName SocketName;\n    FName BoneName;\n    FVector RelativeLocation;\n    FRotator RelativeRotation;\n    FVector RelativeScale;\n}\n\n")),(0,o.kt)("h4",{id:"bonetree"},"BoneTree"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"alt text",src:t(2133).Z,width:"1187",height:"233"})),(0,o.kt)("p",null,"\u4f3c\u4e4e\u4e0d\u4f1a\u4f7f\u7528\uff0c\u90fd\u662f\u7a7a\u7684\uff0c\u5177\u4f53\u5f97\u770b\u4e00\u4e0b\u5bfc\u5165fbx\u7684\u6d41\u7a0b\u6709\u6ca1\u6709\u4f7f\u7528\u5230\u8fd9\u4e2a"),(0,o.kt)("h4",{id:"freferenceskeleton"},"FReferenceSkeleton"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"alt text",src:t(2953).Z,width:"1190",height:"268"})),(0,o.kt)("p",null,"\u5b58\u50a8"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u539f\u59cb\u7684\u9aa8\u9abc\u6570\u636e"),(0,o.kt)("li",{parentName:"ul"},"\u52a0\u5165\u4e86\u7528\u6237\u81ea\u5b9a\u4e49virtual bone\u7684\u5168\u90e8\u9aa8\u9abc\u6570\u636e")),(0,o.kt)("p",null,"\u6240\u6709\u7684\u9aa8\u9abc\u7528TArray\u9759\u6001\u5b58\u50a8\u6811\u7684\u7ed3\u6784\uff0c\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2aName\u5230Index\u7684Map"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"struct FMeshBoneInfo{\n    FName Name;\n    int32 ParentIndex; // root\u7684parentindex\u662fNoneIndex(-1)\n}\nstruct FReferenceSkeleton{\n// raw data\nTArray<FMeshBoneInfo>   RawRefBoneInfo;\nTArray<FTransform>      RawRefBonePose;\n\n// raw data + virtual bone data\nTArray<FMeshBoneInfo>   FinalRefBoneInfo;\nTArray<FTransform>      FinalRefBonePose;\n\n/** TMap to look up bone index from bone name. */\nTMap<FName, int32>      RawNameToIndexMap;\nTMap<FName, int32>      FinalNameToIndexMap;\n}\n")),(0,o.kt)("h4",{id:"fsmartnamecnntainer"},"FSmartNameCnntainer"),(0,o.kt)("p",null,"\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\u5c5e\u6027\uff0c\u672c\u8eab\u542b\u6709\u66f2\u7ebf\u5c5e\u6027"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"alt text",src:t(3179).Z,width:"1189",height:"161"})),(0,o.kt)("h3",{id:"skeletalmesh"},"SkeletalMesh"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class SkeletalMesh {\n// editor-only\nTSharedPtr<FSkeletalMeshModel> ImportedModel;\n\n// runtime\n// \u4e0b\u9762\u5206\u6790\u4e86FSkeletalMeshModel\uff0c TODO \u5206\u6790SkeletalMeshRenderData\nTUniquePtr<FSkeletalMeshRenderData> SkeletalMeshRenderData;\n\nUSkeleton* Skeleton;\nFBoxSphereBounds ImportedBounds;\nTArray<FSkeletalMaterial> Materials;\nUPhysicsAsset* PhysicsAsset;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mermaid"},"classDiagram\nFSkeletalMesh  *--   FSkeletalMeshModel\nFSkeletalMeshModel *-- FSkeletalMeshLODModel\nFSkeletalMeshLODModel *-- FSkelMeshSection\nFSkelMeshSection *-- FSoftSkinVertex\n\nFSkeletalMesh : TSharedPtr< FSkeletalMeshModel > ImportedModel\nFSkeletalMesh : USkeleton *\n\nFSkeletalMeshModel : TArray < FSkeletalMeshLODModel> Sections\nFSkeletalMeshLODModel: TArray < FSkelMeshSection > Sections\nFSkelMeshSection : TArray< FSoftSkinVertex > SoftVertices\n\nFSoftSkinVertex : FVector Position\nFSoftSkinVertex : FVector TangentX\nFSoftSkinVertex : FVector TangentY\nFSoftSkinVertex : FVector TangentZ\nFSoftSkinVertex : FVector2D UVs\nFSoftSkinVertex : FColor Color\n")),(0,o.kt)("p",null,"Skeletal Mesh\u6e32\u67d3\u7684\u6a21\u5f0f",(0,o.kt)("a",{parentName:"p",href:"https://dev.epicgames.com/documentation/en-us/unreal-engine/skeletal-mesh-rendering-paths-in-unreal-engine"},"https://dev.epicgames.com/documentation/en-us/unreal-engine/skeletal-mesh-rendering-paths-in-unreal-engine")),(0,o.kt)("p",null,"\u5728\u67d0\u4e00\u4e2aLOD\u5c42\uff0c\u540c\u4e00Material\u7684Mesh\u79f0\u4e3a\u4e00\u4e2aSection\uff0c\u5982\u679c\u4e00\u4e2aSection\u4f9d\u8d56\u592a\u591a\u9aa8\u9abc\uff0c\u4f1a\u901a\u8fc7\u4e00\u4e9b\u51e0\u4f55\u7b97\u6cd5\u8fdb\u4e00\u6b65\u62c6\u5206\u6210\u591a\u4e2aChunk\u3002"),(0,o.kt)("p",null,"Chunk\u53ea\u4f1a\u5728\u8fd0\u884c\u65f6\u751f\u6210\uff0c\u548cSection\u5171\u7528\u540c\u4e00\u4e2a\u6570\u636e\u7ed3\u6784"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"alt text",src:t(8252).Z,width:"1194",height:"490"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class FSkeletalMeshModel{\n// TIndirectArray \u548cTArray\u5dee\u4e0d\u591a\uff0c\u4f46\u5806\u91cc\u9762\u5b58\u50a8\u7684\u662f\u6307\u5411\u5143\u7d20\u7684\u6307\u9488\uff0c\u53ef\u4ee5\u907f\u514dresize\u7684\u65f6\u5019memcopy\nTIndirectArray<FSkeletalMeshLODModel> LODModels;\n}\n\n\n\n// FSkeletamMeshLODModel \u5bf9\u5e94\u67d0\u5c42LOD\u7684skeletal mesh\u6570\u636e\nclass FSkeletalMeshLODModel{\n    TArray<FSkelMeshSection> Sections;\n}\n\n// SkelMeshSection\n// \u8fd9\u662f\u4f7f\u7528\u540c\u4e00material\u7684\u5b50mesh\n// \u4e5f\u53ef\u80fd\u662fBone Chunking\u6280\u672f\u6784\u9020\u7684\u5b50mesh\uff0c\u7528\u4e8e\u5e76\u884c\u52a0\u901f\nstruct FSkelMeshSection{\n    int MaterialIndex;\n    int BaseIndex; // \u76f8\u5bf9\u4e8eSections\u9996\u5730\u5740\u7684\u504f\u79fb\u503c\n    int BaseVertexIndex; // \u9876\u70b9\u7684offset\n    int NumTriangles;\n    \n    // \u6240\u6709\u9876\u70b9\u7684\u5177\u4f53\u4fe1\u606f\uff0c\u5305\u62ecPosition\uff0cTBN\u5411\u91cf\uff0c UV\u5750\u6807\uff0c FColor\n    TArray<FSoftSkinVertex> SoftVertices;\n\n    // \u8fd9\u4e00section\u7528\u5230\u7684\u6240\u6709\u9aa8\u9abc\n    TArray<FBoneIndexType> BoneMap;\n\n    /*\n     * If this section was produce because of BONE chunking, the parent section index will be valid.\n     * If the section is not the result of skin vertex chunking, this value will be INDEX_NONE.\n     * Use this value to know if the section was BONE chunked:\n     * if(ChunkedParentSectionIndex != INDEX_NONE) will be true if the section is BONE chunked\n     */\n    int32 ChunkedParentSectionIndex;\n}\n")),(0,o.kt)("h3",{id:"uanimationsequence"},"UAnimationSequence"),(0,o.kt)("p",null,"UAnimSequenceBase\u4e2d\u5df2\u7ecf\u6709\u4e86sequence\u6240\u9700\u8981\u7684\u6838\u5fc3\u6570\u636e\u548c\u5c5e\u6027"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class UAnimSequenceBase : public UAnimationAsset {\n    // \u6309\u65f6\u95f4\u5148\u540e\u6392\u5e8f\n    TArray<struct FAnimNotifyEvent> Notifies;\n\n    float SequenceLength;\n    float RateScale;\n    bool bLoop;\n\n    // sequecen\u6570\u636e\uff0c\u5305\u62ec\u9aa8\u9abc\u52a8\u753b\u6570\u636e\u548ccurve\uff0c\n    // AnimSequence\u7684instance\u4f1a\u5728\u8fd0\u884c\u65f6\u4eceDataModel\u4e2d\u62ff\u6570\u636e\n    TObjectPtr<UAnimDataModel> DataModel;\n}\n\nclass UAnimDataModel : public UObject, public IAnimationDataModel{\n    TArray<FBoneAnimationTrack> BoneAnimationTracks;\n    FFrameRate FrameRate; // \u52a8\u753b\u91c7\u6837\u7684\u5e27\u7387\n    int32 NumberOfFrames; // \u91c7\u6837\u603b\u5e27\u6570\n    int32 NumberOfKeys; // \u5173\u952e\u5e27\u603b\u6570\n    FAnimationCurveData CurveData;//\u66f2\u7ebf\u6570\u636e\n}\n\n// \u4e00\u4e2atrack\u5c31\u5bf9\u5e94\u4e00\u4e2abone\u7684transform\u66f2\u7ebf\nstruct FBoneAnimationTrack{\n    int32 BoneTreeIndex;\n    FName Name;\n    \n    /*\n    FRawAnimSequenceTrack\uff1a\n    TArray<FVector3f> PosKeys;\n    TArray<FQuat4f> RotKeys;\n    TArray<FVector3f> ScaleKeys;\n    */\n    FRawAnimSequenceTrack InternalTrackData;\n}\n\nstruct FAnimationCurveData{\n    TArray<FFloatCurve> FloatCurves; // FFloatCurve \u5c31\u662fTArray\u4fdd\u5b58\u7684time/value\uff08float\uff09\n    TArray<FTransformCurve> TransformCurves; // FTransformCurve \u5c31\u662fTArray\u4fdd\u5b58\u7684time/transform value\uff08float3\uff09\n}\n")),(0,o.kt)("p",null,"UAnimSequence\u5b9a\u4e49\u4e86\u4e9b\u989d\u5916\u7684\u7684\u5c5e\u6027\uff0c\u5982\u52a8\u753b\u538b\u7f29\u3001\u63d2\u503c\u65b9\u5f0f\u7b49"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class UAnimSequence : public UAnimSequenceBase{\n// \u52a8\u753b\u538b\u7f29\u914d\u7f6e\u6587\u4ef6\nTObjectPtr<class UAnimBoneCompressionSettings> BoneCompressionSettings\uff1b\nTObjectPtr<class UAnimCurveCompressionSettings> CurveCompressionSettings;\n\n// \u88ab\u538b\u7f29\u540e\u7684\u6570\u636e\uff0c\u538b\u7f29\u7684\u65b9\u6cd5\u65e0\u975e\u5c31\u662f\n// 1. \u7ebf\u6027\u63d2\u503c\u9020\u6210\u7684\u8bef\u5dee\uff08\u8fd9\u4e2a\u8bef\u5dee\u4e00\u822c\u662f\u4f53\u73b0\u5728mesh\u4e0a\u7684\uff0c\u6bd4\u5982\u7ed1\u4e24\u4e2a\u70b9\uff0c\u8ba1\u7b97\u66ff\u6362\u524d\u540e\u8fd9\u4e24\u4e2a\u70b9\u7684compnent space location\uff09\u5728\u4e00\u5b9athreshold\u5185\u7684\uff0c\u53ea\u4fdd\u7559\u9996\u4f4d\u5e27\n// 2. \u5bf9\u6570\u636e\u8fdb\u884c\u538b\u7f29\uff0c\u6bd4\u5982float\u6269\u5927\u591a\u5c11\u500d\u540e\u538b\u7f29\u6210int8/int16\nFCompressedAnimSequence CompressedData;\n\n// Additive\u52a8\u753b\nTEnumAsByte<enum EAdditiveAnimationType> AdditiveAnimType; // local space / mesh space\n\n// Retargeting\nFName RetargetSource; //\u91cd\u5b9a\u5411\u7684Base Pose\n\n// \u63d2\u503c\u65b9\u5f0f\nEAnimInterpolationType Interpolation; // linear / step\uff08\u7528\u66f4\u8fd1\u7684\u90a3\u4e2akey\u7684\u503c\uff09\n\n// RootMotion\nbool bEnableRootMotion;\n}\n")),(0,o.kt)("h2",{id:"uaniminstance\u548cfaniminstanceproxy"},"UAnimInstance\u548cFAnimInstanceProxy"),(0,o.kt)("p",null,"UAnimInstance\u662f\u52a8\u753b\u84dd\u56fe\u7684\u7236\u7c7b\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u5316\u7684character\u62e5\u6709\u4e00\u4e2aAnimInstance\u5b9e\u4f8b\u3002\u901a\u8fc7AnimGraph\u5c01\u88c5\u52a8\u753b\u6d41\u7a0b\uff0c\u901a\u8fc7EventGraph\u6216\u5176\u4ed6\u624b\u6bb5\uff08\u6bd4\u5982BlueprintThreadsafeUpdate Function\uff0c \u91cd\u5199NativeThreadSafeUpdateAnimation\u7b49\uff09\u548cActor\u7684\u5176\u4ed6\u7ec4\u4ef6\u4ea4\u4e92\uff08\u6bd4\u5982\u79fb\u52a8\u7ec4\u4ef6\uff09\u3002"),(0,o.kt)("p",null,"\u5f3a\u4f9d\u8d56\u4e8eFAnimInstanceProxy\uff0cFAnimInstanceProxy\u4e00\u822c\u4e0d\u6b62\u8fd0\u884c\u5728\u5de5\u4f5c\u7ebf\u7a0b\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'struct UAnimInstance{\n    TObjectPtr<USkeleton> CurrentSkeleton;\n\n    // \u5141\u8bb8AnimInstance\u5c06native update, blend tree, montages \u548c asset players \u653e\u5230\u5de5\u4f5c\u7ebf\u7a0b\u8fdb\u884c\n    // \u9700\u8981\u540c\u65f6\u8bbe\u7f6eProject Setting\u4e2d\u7684Allow Multi Threaded Animation Update"\n    uint8 bUseMultiThreadedAnimationUpdate : 1; \n\n    FAnimInstanceProxy* AnimInstanceProxy\n}\n')),(0,o.kt)("p",null,"\u5e2e\u52a9UAnimInstance\u5b9e\u73b0\u52a8\u753b\u7cfb\u7edf\u7684\u529f\u80fd\uff0c\u4e3b\u8981\u662f\u64cd\u4f5c\uff0c\u7ba1\u7406\u52a8\u753b\u8282\u70b9\uff0c\u7ba1\u7406\u52a8\u753b\u8282\u70b9\u7684\u5404\u4e2a\u865a\u51fd\u6570\u8c03\u7528\uff0c\u4ee5\u53ca\u52a8\u753b\u901a\u77e5\u7684\u5904\u7406\uff0c\u6e05\u7406\u6536\u96c6\u52a8\u753b\u901a\u77e5\uff0c\u7136\u540e\u628a\u6536\u96c6\u5230\u7684\u52a8\u753b\u901a\u77e5\u4ea4\u7ed9UAnimInstance\u53bb\u5904\u7406\nFAnimInstanceProxy"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"// output pose node\nFAnimNode_Base* RootNode;\n\n// linked instance\nFAnimNode_LinkedInputPose* DefaultLinkedInstanceInputNode;\n\n// \u5f53\u524d\u5e27\u88ab\u89e6\u53d1\u7684Anim Notify\nTArray<FAnimNotifyEventReference> ActiveAnimNotifiesSinceLastTick;\n\n// \u5728gamethread\u4e0a\u6267\u884c\u7684UAnimInstance::PreUpdateAnimation\u8282\u70b9\nTArray<FAnimNode_Base*> GameThreadPreUpdateNodes;\n")),(0,o.kt)("p",null,"FAnimNode_Base\u662f\u52a8\u753b\u8282\u70b9\u7684\u57fa\u7c7b\uff0c\u5728\u81ea\u5b9a\u4e49\u8282\u70b9\u7684\u65f6\u5019\u5e38\u5e38\u9700\u8981\u91cd\u5199\u4e00\u4e9b\u865a\u51fd\u6570"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class FAnimNode_Base{\n    ENGINE_API virtual void Initialize_AnyThread(const FAnimationInitializeContext& Context);\n    ENGINE_API virtual void CacheBones_AnyThread(const FAnimationCacheBonesContext& Context);\n    ENGINE_API virtual void Update_AnyThread(const FAnimationUpdateContext& Context);\n    ENGINE_API virtual void Evaluate_AnyThread(FPoseContext& Output);\n    ENGINE_API virtual void EvaluateComponentSpace_AnyThread(FComponentSpacePoseContext& Output);\n}\n")),(0,o.kt)("h2",{id:"\u52a8\u753b\u84dd\u56fe"},"\u52a8\u753b\u84dd\u56fe"),(0,o.kt)("p",null,"\u52a8\u753b\u84dd\u56fe\u7684C++\u7236\u7c7b\u662fAnimInstance\uff0c\u6bcf\u4e00\u4e2aCharacter\u5c06\u4f1a\u62e5\u6709\u4e00\u4e2aAnimInstance\u5b9e\u4f8b\uff0c\u4eceAnimInstance\u5b9e\u4f8b\u4e2d\u4e5f\u53ef\u4ee5\u83b7\u53d6\u5f53\u524d\u4f7f\u7528\u81ea\u5df1\u7684Character\uff0c\u8fd9\u6837\u597d\u5904\u5c31\u662f\u628a\u52a8\u753b\u76f8\u5173\u7684\u903b\u8f91\uff0c\u62c6\u5206\u5230AnimInstance\u53bb\u505a\u4e86\uff0c\u4f7fCharacter\u4e0d\u4f1a\u8fc7\u4e8e\u590d\u6742\u5e9e\u5927"),(0,o.kt)("p",null,"\u52a8\u753b\u84dd\u56fe\uff08AnimInstanceProxy\uff09\u4e2d\u7684\u6240\u6709\u8282\u70b9\u4ee5\u6811\u72b6\u7ed3\u6784\u7ec4\u7ec7\uff0c\u5b83\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u4e00\u5b9a\u662fFAnimNode_Root\uff0c\u521d\u59cb\u5316\u65f6\u5c06\u5b83\u8d4b\u503c\u7ed9RootNode\u3002 RootNode\u867d\u7136\u5b58\u653e\u5728\u6570\u7ec4\u4e2d\u7b2c\u4e00\u4e2a\uff0c\u4f46\u5374\u662f\u52a8\u753b\u84dd\u56fe\u7684\u8f93\u51fa\u8282\u70b9(Output Pose)\uff0c\u5176\u4ed6\u8282\u70b9\u90fd\u4ee5\u8f93\u51fa\u9006\u5e8f\u7684\u65b9\u5f0f\u901a\u8fc7FPoseLink(\u5728\u84dd\u56fe\u7f16\u8f91\u5668\u4e2d\u8868\u73b0\u4e3a\u6709Pose\u8fde\u7ebf)\u94fe\u63a5\u6210\u4e00\u9897\u6811\uff0c\u6267\u884c\u65f6\u91c7\u7528\u524d\u5e8f\u9012\u5f52\u904d\u5386\u3002 \u6240\u6709\u8282\u70b9\u5927\u81f4\u5206\u4e3a\uff1a"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\u8d44\u6e90\u64ad\u653e\u5668(\u7ee7\u627f\u81eaFAnimNode_AssetPlayerBase)\uff0c\u76f4\u63a5\u8f93\u51fa\u52a8\u753b\u8d44\u6e90\u3002"),(0,o.kt)("li",{parentName:"ol"},"\u6df7\u5408\u7c7b\u8282\u70b9(FAnimNode_.",(0,o.kt)("em",{parentName:"li"},"Blend."),")\u8d1f\u8d23\u786e\u8ba4\u5177\u4f53\u7684\u6df7\u5408\u65b9\u5f0f\u4e0e\u52a8\u753b\u7ed3\u679c\u3002"),(0,o.kt)("li",{parentName:"ol"},"\u52a8\u753b\u72b6\u6001\u548c\u72b6\u6001\u673a\u3002"),(0,o.kt)("li",{parentName:"ol"},"\u5176\u4ed6\u529f\u80fd\u8282\u70b9\u3002\n\u5bf9\u4e8e\u6240\u6709\u8282\u70b9\u6765\u8bf4\uff0c\u5177\u4f53\u4f9d\u8d56\u7684\u53c2\u6570\u7684\u8ba1\u7b97\u5728\u51fd\u6570Update_AnyThread\u4e2d\u786e\u5b9a(Time, Weight)\uff0c\u4f9d\u8d56\u7684DeltaTime\u548c\u52a8\u753b\u5b9e\u4f8b\u7b49\u53c2\u6570\u5728FAnimationUpdateContext\u4e2d\u4f20\u9012\u3002\u7136\u540e\u5728\u51fd\u6570Evaluate_AnyThread\u4e2d\u6c42\u89e3\uff0c\u7ed3\u679c\u4fdd\u5b58\u5728FPoseContext\u4e2d\uff0c\u8bed\u4e49\u662f\u5230\u5f53\u524d\u8fd9\u4e2a\u8282\u70b9\u65f6\uff0c\u5e94\u8be5\u8f93\u51fa\u600e\u6837\u7684\u52a8\u753b\u59ff\u52bf\u3001\u66f2\u7ebf\u3001\u5c5e\u6027\u7b49\u3002")),(0,o.kt)("p",null,"\u603b\u7684\u6765\u8bf4\uff0cUE\u7684\u52a8\u753b\u7cfb\u7edf\u662f\u628a\u6240\u6709\u64cd\u4f5c\u90fd\u62bd\u8c61\u6210\u5bf9Pose\u7684\u5904\u7406\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u90fd\u662f\u786e\u5b9a\u5982\u4f55\u8f93\u51fa\u5f53\u524d\u89d2\u8272\u7684Pose\u3002"),(0,o.kt)("h3",{id:"\u52a8\u753b\u84dd\u56fe\u6267\u884c\u6d41\u7a0b"},"\u52a8\u753b\u84dd\u56fe\u6267\u884c\u6d41\u7a0b"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"\u603b\u7ed3"),"\n\u52a8\u753b\u84dd\u56fe\u5c31\u662f\u4e3a\u4e86\u6df7\u5408\u5404\u4e2aPose\uff0c\u8f93\u51fa\u6700\u7ec8\u7684Pose\uff0c\u6700\u7ec8\u7684OutputPose\u662fAnimGraph\u7684Root\uff0c\u6bcf\u6b21Tick\uff0c\u4f1a\u5148\u5bf9EventGraph\u8fdb\u884cTick\uff0c\u7136\u540e\u4eceRoot\u5f00\u59cbDFS\u904d\u5386\u4e24\u6b21AnimGraph Tree"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\u6267\u884c\u6bcf\u4e2aNode\u7684Update_AnyThread,\u901a\u8fc7\u4f20\u5165\u7236\u8282\u70b9\u7684FAnimUpdateContext\uff0c\u8ba1\u7b97\u5f53\u524d\u8282\u70b9\u7684weight\u3010\u7528\u4e8eAnimationInsight\u3001PoseWatch\u7b49\u3011"),(0,o.kt)("li",{parentName:"ol"},"\u6267\u884c\u6bcf\u4e2aNode\u7684Evaluate_AnyThread, \u7236\u8282\u70b9\u7528\u5b50\u8282\u70b9Pose\u66f4\u65b0\u81ea\u5df1\u7684Pose\uff0c\u4f20\u9012\u901a\u8fc7FPoseContext")),(0,o.kt)("p",null,"\u4ee5PSD\u4e3a\u4f8b\uff0c\u8be5Node\u63a5\u53d7\u4e00\u4e2a\u8f93\u5165Pose\uff0c\u5bf9\u9aa8\u9abcTransform\u8fdb\u884c\u540e\u5904\u7406\u3002\u6839\u636e\u8bfb\u53d6\u7684Config\uff0c\u627e\u5230Skeleton\u91cc\u7684\u6240\u6709Driver Bone\uff0c\u6bcf\u4e2aDriver Bone\u5bf9\u5e94\u4e00\u4e2aPSD\uff0c\u6bcf\u4e2aPSD\u53ef\u4ee5\u6709\u591a\u4e2aDrivenBone\uff0c\u8bb0\u5f55k\u4e2asample\uff0c\u6bcf\u4e2asample\u5305\u62ecDriverBone\u7684Rot\u548cDrivenBone\u7684Transform\u3002\u9996\u5148\u9700\u8981\u8c03\u7528Solver\u8ba1\u7b97\u51fa\uff0c\u5f53\u524dPose\u4e0b\uff08\u8f93\u5165\u7684Pose\uff09\u6bcf\u4e2aSample\u7684\u6743\u91cd\uff0c\u7136\u540e\u628a\u6bcf\u4e2aDrivenBone\u7684Transform\u66f4\u65b0\u4e3aSample\u7684\u6df7\u5408"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'void FAnimNode_XPoseDriver::Update_AnyThread(const FAnimationUpdateContext& Context)\n{\n    Super::Update_AnyThread(Context);\n\n    //EvaluateGraphExposedInputs.Execute(Context);\n\n    InputPose.Update(Context);\n}\n\nvoid FAnimNode_XPoseDriver::Evaluate_AnyThread(FPoseContext& Output)\n{\n    FPoseContext dupContext(Output);\n    InputPose.Evaluate(dupContext);\n\n    // Get the index of the source bone\n    const FBoneContainer& BoneContainer = dupContext.Pose.GetBoneContainer();\n\n    DriverBoneTMs.Reset();\n    for (const FBoneReference& driverBone : DriverBones)\n    {\n        FTransform DriverBoneTM = FTransform::Identity;\n\n        const FCompactPoseBoneIndex SourceCompactIndex = driverBone.GetCompactPoseIndex(BoneContainer);\n        if (SourceCompactIndex.GetInt() != INDEX_NONE)\n        {\n            DriverBoneTM = dupContext.Pose[SourceCompactIndex];\n            DriverBoneTMs.Add(driverBone.BoneName.ToString(), DriverBoneTM);\n        }\n    }\n\n    //blend process\n    for (auto& elem : BoneToPSDTable)\n    {\n        auto boneName = elem.Key;\n        auto psdNames = elem.Value;\n\n        auto& tm = DriverBoneTMs[boneName];\n\n        for (auto& psdName : psdNames)\n        {\n            auto psd = PSDWorkers[psdName];\n            psd->Resolve(tm); // solver \u89e3\u7b97\n\n            auto currentPsdDescription = psd->_desc;\n            //blend driven joints TRS for skeleton psd.\n            if (currentPsdDescription.PsdSolverNodeType == "xSolver")\n            {\n                for (auto drivenBoneName : currentPsdDescription.DrivenObjects)\n                {\n                    auto drivenBone = DrivenBones[drivenBoneName];\n\n                    FTransform DrivenBoneTM = FTransform::Identity;\n                    const FCompactPoseBoneIndex SourceCompactIndex = drivenBone.GetCompactPoseIndex(BoneContainer);\n                    if (SourceCompactIndex.GetInt() != INDEX_NONE)\n                    {\n                        DrivenBoneTM = dupContext.Pose[SourceCompactIndex];\n                        FTransform& TargetTransform = Output.Pose[SourceCompactIndex];\n\n                        FVector lOriginalTranslate = DrivenBoneTM.GetTranslation();\n                        FVector lOriginalAngle = DrivenBoneTM.GetRotation().Euler();\n                        FQuat lOriginalQ = DrivenBoneTM.GetRotation();\n                        FVector lOriginalScale = DrivenBoneTM.GetScale3D();\n\n                        //the number of weights must be same as the number of poses.\n                        int weightsNum = psd->Weights.Num();\n                        int posesNum = currentPsdDescription.Poses.Num();\n\n                        double lAllWeights = 0.0;\n\n                        FVector lT(0.0, 0.0, 0.0);\n                        FVector lR(0.0, 0.0, 0.0);\n                        FVector lS(1.0, 1.0, 1.0);\n\n                        std::string DebugWeights;\n                        for (auto& elem2 : psd->Weights)\n                        {\n                            FString lPoseName = elem2.Key;\n                            double lWeight = elem2.Value;\n\n                            auto lPose = currentPsdDescription.Poses.Find(lPoseName);\n\n\n                            auto lDrivenMatrix = lPose->outDrivenLocalMatrixList[drivenBoneName];\n                            FMatrix& lMatrix = lDrivenMatrix;\n                            \n                            FTransform lDrivenTransform(lMatrix);\n                            FVector translation = lDrivenTransform.GetTranslation();\n                            FVector angles = lDrivenTransform.GetRotation().Euler();\n                            FVector scale = lDrivenTransform.GetScale3D();\n\n                            lT.X += (translation.X * lWeight);\n                            lT.Y += (translation.Y * lWeight);\n                            lT.Z += (translation.Z * lWeight);\n\n                            lR.X += (angles.X * lWeight);\n                            lR.Y += (angles.Y * lWeight);\n                            lR.Z += (angles.Z * lWeight);\n                            \n\n                            lS.X *= ((scale.X - 1) * lWeight + 1);\n                            lS.Y *= ((scale.Y - 1) * lWeight + 1);\n                            lS.Z *= ((scale.Z - 1) * lWeight + 1);\n\n                            lAllWeights += lWeight;\n\n                        }\n\n                        //convert Maya translate to UE translate\n                        TargetTransform.SetTranslation(FVector(lT.X, -lT.Y, lT.Z));\n\n\n                        double lRx = lR.X;\n                        double lRy = lR.Y;\n                        double lRz = lR.Z;\n\n                        \n                        auto lJointOrient = currentPsdDescription.DrivenJointOrientList[drivenBoneName];\n                        double lOx = lJointOrient.X;\n                        double lOy = lJointOrient.Y;\n                        double lOz = lJointOrient.Z;\n\n                        auto A = FRotator(-lOy, -lOz, lOx);\n                        auto B = FRotator(lR.Y, -lR.Z, lR.X);\n                        FQuat jointOrientQ = FQuat(A);\n                        FQuat jointRotateQ = FQuat(B);\n                        FQuat lRotateQ =  jointOrientQ * jointRotateQ;\n                \n                        \n                        if (!lRotateQ.IsNormalized())\n                        {\n                            lRotateQ.Normalize();\n                        }\n\n                        TargetTransform.SetRotation(lRotateQ);\n                        TargetTransform.SetScale3D(lS);\n                    } // if SourceCompactIndex\n                } //for drivenBoneName\n            } // if xSolver\n        } // for psdName\n    } // for elem\n}\n\n')),(0,o.kt)("p",null,"\u6d4b\u8bd5\u7528\u4f8b\n",(0,o.kt)("img",{alt:"alt text",src:t(4164).Z,width:"1315",height:"490"}),"\nrewind\u4e2d\u53ef\u4ee5\u67e5\u770b\u5230\u4e09\u6bb5sequence\u7684blend\u6bd4\u4f8b\u5206\u522b\u4e3awalk_fwd = 0.5\uff0cjump = 0.5\uff0cequip = 0.25\n",(0,o.kt)("img",{alt:"alt text",src:t(257).Z,width:"964",height:"455"}),"\n",(0,o.kt)("img",{alt:"alt text",src:t(1521).Z,width:"1241",height:"495"})),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://app.diagrams.net/#G1EZSfyheX2nfUPK2aAwKCHdAC8rQk3T74#%7B%22pageId%22%3A%22IAjTh5yaLsgbAQ9wG9K3%22%7D"},"\u6d41\u7a0b\u56fe"),"\n",(0,o.kt)("img",{alt:"alt text",src:t(9211).Z,width:"961",height:"1327"}),"\nUAnimInstance::PreUpdateAnimation\u4f1a\u8c03\u7528FAnimInstanceProxy\u7684\u51fd\u6570",(0,o.kt)("inlineCode",{parentName:"p"},"GetProxyOnGameThread<FAnimInstanceProxy>().PreUpdate(this, DeltaSeconds);"),",\u5176\u4e2d\u4f1a\u6267\u884c"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"for (FAnimNode_Base* Node : GameThreadPreUpdateNodes)\n{\n    Node->PreUpdate(InAnimInstance);\n}\n")),(0,o.kt)("p",null,"UAnimInstance::ParallelUpdateAnimation\u4f1a\u8c03\u7528",(0,o.kt)("inlineCode",{parentName:"p"},"GetProxyOnAnyThread<FAnimInstanceProxy>().UpdateAnimation();"),"\n\u6ce8\u610f\u7eff\u6846\u4e2d\u7684\u90e8\u5206\uff0c\u5728ABP\u9884\u89c8\u72b6\u6001\u65f6\u4f1a\u6267\u884c\uff0c\u4f46\u5728runtime\u4e00\u822c\u4e0d\u4f1a\u6267\u884c\uff0c\u800c\u662f\u7559\u5230",(0,o.kt)("inlineCode",{parentName:"p"},"USkeletalMeshComponent::RefreshBoneTransform"),"\u4e2d,\u5206\u53d1\u5230\u5de5\u4f5c\u7ebf\u7a0b\u6267\u884c\u3002"),(0,o.kt)("p",null,"FAnimInstanceProxy::ParallelUpdate\u662f\u52a8\u753bAnimGraph\u6267\u884c\u7684\u6838\u5fc3\u90e8\u5206"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"void FAnimInstanceProxy::UpdateAnimation(){\n    // \u9996\u5148\u5bf9root\uff08outputpose\uff09\u6267\u884c\n    UpdateAnimation_WithRoot(Context, RootNode, NAME_AnimGraph);\n\n    // \u7ebf\u7a0b\u5b89\u5168\u66f4\u65b0\u51fd\u6570\uff08native\u548c\u84dd\u56fe\u4e2d\u5b9a\u4e49\u7684\uff09\n    // UAnimInstance::NativeThreadSafeUpdateAnimation\u4e00\u822c\u4f1a\u5728\u81ea\u5df1\u7ee7\u627fAnimInstance\u7684cpp\u7c7b\u4e2doverwrite\n    NativeThreadSafeUpdateAnimation();\n    BlueprintThreadSafeUpdateAnimation();\n}\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"FAnimNode_Base::Update_AnyThread"),"\u4f1a\u4eceroot\u8fdb\u53bb\u904d\u5386\u6bcf\u4e2anode\u6267\u884c\uff0c\u901a\u8fc7FPoseLinkBase\u627e\u5230\u94fe\u63a5\u5230\u5f53\u524dnode\u7684\u5b50\u8282\u70b9\uff08\u6811\u7684\u5b50\u8282\u70b9\uff0c\u5176\u5b9e\u662fanimgraph\u7684\u4e0a\u6e38\u8282\u70b9\uff09\u3002\u5177\u4f53\u5b9e\u73b0\u5728",(0,o.kt)("inlineCode",{parentName:"p"},"FPoseLinkBase::Update"),"\u4e2d\n",(0,o.kt)("img",{alt:"alt text",src:t(7040).Z,width:"998",height:"588"})),(0,o.kt)("p",null,"\u7136\u540eEvaluate_AnyThread\u4e5f\u662f\u7c7b\u4f3c\u7684\u64cd\u4f5c\u3002"),(0,o.kt)("h3",{id:"\u5206\u53d1\u5230\u5de5\u4f5c\u7ebf\u7a0b\u7684\u65b9\u5f0f"},"\u5206\u53d1\u5230\u5de5\u4f5c\u7ebf\u7a0b\u7684\u65b9\u5f0f"),(0,o.kt)("h3",{id:"\u4e3e\u4f8b\u51e0\u4e2aanimnode"},"\u4e3e\u4f8b\u51e0\u4e2aAnimNode"),(0,o.kt)("h4",{id:"fanimnode_twoboneik"},"FAnimNode_TwoBoneIK"),(0,o.kt)("h4",{id:"fanimnode_sequenceplayer"},"FAnimNode_SequencePlayer"),(0,o.kt)("h4",{id:"\u81ea\u5b9a\u4e49-fanimnode_psd"},"\u81ea\u5b9a\u4e49 FAnimNode_PSD"),(0,o.kt)("h3",{id:"fast-path"},"Fast Path"),(0,o.kt)("p",null,"\u4e0b\u56fe\u4e2d1\u30012\u5747\u652f\u6301Fast Path\uff0c \u5b98\u65b9\u6587\u6863\u5199\u7740\uff1a\u8bfb\u6210\u5458\u53d8\u91cf\u3001\u5bf9\u7ed3\u6784\u4f53\u6210\u5458\u53d8\u91cf\u8fdb\u884cbreak\u64cd\u4f5c\u4ee5\u53caBool Not\u64cd\u4f5c\u4f9d\u7136\u652f\u6301Fast Path\uff0c\u800c\u5176\u4ed6\u6570\u503c\u8fd0\u7b97\u4e0d\u652f\u6301Fast Path\uff08\u56fe\u4e09\uff09\u3002\n",(0,o.kt)("img",{alt:"alt text",src:t(4490).Z,width:"1020",height:"371"}),"\n",(0,o.kt)("img",{alt:"alt text",src:t(3115).Z,width:"988",height:"402"}),"\n",(0,o.kt)("img",{alt:"alt text",src:t(960).Z,width:"1050",height:"459"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"\u4ec0\u4e48\u662fFast Path"),"\n\u4f7f\u7528FastPath\uff0c\u5f15\u64ce\u5c31\u53ef\u4ee5\u5728\u5185\u90e8\u590d\u5236\u53c2\u6570\uff0c\u800c\u4e0d\u662f\u6267\u884c\u84dd\u56fe\u4ee3\u7801\uff0c\u540e\u8005\u9700\u8981\u8c03\u7528\u84dd\u56fe\u865a\u62df\u673a\u5728runtime\u5bf9\u7f16\u8bd1\u7684\u84dd\u56fe\u5b57\u8282\u7801\u8fdb\u884c\u89e3\u91ca\uff0c\u6d4b\u901f\u9a8c\u8bc1\u7ed3\u679c\u5982\u4e0b\u3002\n",(0,o.kt)("img",{alt:"alt text",src:t(555).Z,width:"1592",height:"562"}),"\n",(0,o.kt)("img",{alt:"alt text",src:t(2922).Z,width:"1232",height:"593"}),"\n",(0,o.kt)("img",{alt:"alt text",src:t(9053).Z,width:"1544",height:"562"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"graph-1  13 + 47"),(0,o.kt)("li",{parentName:"ul"},"graph-2  13 + 52"),(0,o.kt)("li",{parentName:"ul"},"graph-3  13 + 61")),(0,o.kt)("h1",{id:"reference"},"Reference"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.cocos.com/creator/3.8/manual/en/animation/marionette/additive-animation/"},"addtive\u52a8\u753b cocos")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.unrealengine.com/4.27/en-US/AnimatingObjects/SkeletalMeshAnimation/AimOffset/"},"addtive\u52a8\u753b \u535a\u5ba2")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.unrealengine.com/4.27/en-US/AnimatingObjects/SkeletalMeshAnimation/AimOffset/"},"addtive\u52a8\u753b UE4")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://dev.epicgames.com/documentation/zh-cn/unreal-engine/animation-optimization-in-unreal-engine"},"UE5\u5b98\u65b9\u6587\u6863 \u52a8\u753b\u4f18\u5316"))))}d.isMDXComponent=!0},224:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-1-4af299a734c05696c670c8e35f8a04ad.png"},4490:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-10-f0247ca83c5ae8a2d596fdc198abe1ca.png"},3115:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-11-85e64c85811ee2f6433e1b847ded96dd.png"},960:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-12-d1e49cfc7c3acda8401f834396603651.png"},9053:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-13-9c1bb5c6eb2d1d13d385857d18ff5ba5.png"},555:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-14-2d3fc5d573918bbf3cf2891795efe72a.png"},2922:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-15-be7a0ddb457c5b1cb227c0fc315b2ebd.png"},5327:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-17-4c13de0d2aed7772303e323cc813091d.png"},4994:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-18-d6c04aefc9794228630115ee16da8d4c.png"},2133:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-19-b0a0a68a059de3636e18b10c9eddb546.png"},1695:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-2-81150ac18cc7d6cc32f8281e29f3a21d.png"},2953:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-20-17fdf3fbbeb07a1b815e87ee155672ec.png"},3179:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-21-f35d6a2e40ecd90bcd470619b4b822bc.png"},8252:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-22-7cc1426048a437a98dadae1d9a845bce.png"},2255:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-24-7decd9052becb5c7afd9f8a802e70ca4.png"},1068:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-25-e99ef8ffb8cf0cce49152f3a1fb94a4f.png"},1103:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-26-260520fb8e38e015a5b51f6389b83471.png"},7040:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-27-04eabe573494f3d37b6a44b5a0312452.png"},4164:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-7-13c49d7cba9f982502c64ebfaba12ba7.png"},257:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-8-f9044145e74c964c406736dc9650bd77.png"},1521:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-9-b63eeed974e1532757f16eeb42fc923e.png"},3471:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/image-e26da75b8fa249c5a234745a39d6f9fd.png"},9211:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/rewind-19d308a96e5882c389c9bc326e166ff2.jpg"}}]);