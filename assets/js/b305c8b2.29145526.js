"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5693],{3905:(n,e,t)=>{t.d(e,{Zo:()=>s,kt:()=>g});var a=t(7294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function c(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function i(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},o=Object.keys(n);for(a=0;a<o.length;a++)t=o[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(a=0;a<o.length;a++)t=o[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var l=a.createContext({}),u=function(n){var e=a.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):c(c({},e),n)),t},s=function(n){var e=u(n.components);return a.createElement(l.Provider,{value:e},n.children)},p="mdxType",d={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,o=n.originalType,l=n.parentName,s=i(n,["components","mdxType","originalType","parentName"]),p=u(t),m=r,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return t?a.createElement(g,c(c({ref:e},s),{},{components:t})):a.createElement(g,c({ref:e},s))}));function g(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var o=t.length,c=new Array(o);c[0]=m;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=n,i[p]="string"==typeof n?n:r,c[1]=i;for(var u=2;u<o;u++)c[u]=t[u];return a.createElement.apply(null,c)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9956:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var a=t(7462),r=(t(7294),t(3905));const o={title:"\u4eff\u51fd\u6570\u548cstd::function",tags:["C++"]},c=void 0,i={permalink:"/blog/C++/\u4eff\u51fd\u6570/1",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/C++/\u4eff\u51fd\u6570/1.md",source:"@site/blog/C++/\u4eff\u51fd\u6570/1.md",title:"\u4eff\u51fd\u6570\u548cstd::function",description:"\u95ee\u9898\u5f15\u5165",date:"2024-07-21T15:24:51.000Z",formattedDate:"July 21, 2024",tags:[{label:"C++",permalink:"/blog/tags/c"}],readingTime:7.855,hasTruncateMarker:!0,authors:[],frontMatter:{title:"\u4eff\u51fd\u6570\u548cstd::function",tags:["C++"]},prevItem:{title:"Modern Cpp\u65b0\u7279\u6027\u603b\u7ed3",permalink:"/blog/C++/Modern Cpp\u65b0\u7279\u6027\u603b\u7ed3/1"},nextItem:{title:"Rewind Debugger",permalink:"/blog/Unreal/RewindDebugger/1"}},l={authorsImageUrls:[]},u=[{value:"\u95ee\u9898\u5f15\u5165",id:"\u95ee\u9898\u5f15\u5165",level:2},{value:"c\u51fd\u6570\u6307\u9488",id:"c\u51fd\u6570\u6307\u9488",level:2},{value:"\u4eff\u51fd\u6570\u548clambda",id:"\u4eff\u51fd\u6570\u548clambda",level:2},{value:"std::function",id:"stdfunction",level:2},{value:"\u5728std::for_each\u4e2d\u770blambda\u548cstd::bind",id:"\u5728stdfor_each\u4e2d\u770blambda\u548cstdbind",level:2},{value:"std::for_each",id:"stdfor_each",level:3},{value:"lambda\u548cstd::bind",id:"lambda\u548cstdbind",level:3}],s={toc:u},p="wrapper";function d(n){let{components:e,...o}=n;return(0,r.kt)(p,(0,a.Z)({},s,o,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"\u95ee\u9898\u5f15\u5165"},"\u95ee\u9898\u5f15\u5165"),(0,r.kt)("p",null,"\u5e38\u5e38\u7528\u5230\u5404\u79cd\u5f62\u5f0f\u7684\u4eff\u51fd\u6570\u8c03\u7528api\uff0cstl\u662f\u600e\u4e48\u5b9e\u73b0\u8fd9\u4e9b\u51fd\u6570/\u7c7b\u7684"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// sort\uff0c for_each\u7684\u5b9e\u73b0\u662f\u600e\u6837\u7684\nstd::sort(nums.begin(), nums.end(), [](int a, int b){return a > b;});\n\nstd::for_each(nums.begin(), nums.end(), [](int& item){});\n\n// \u9700\u8981\u5b9a\u4e49Vec3\u7684bool\u8fd0\u7b97\u548cstd::hash<Vec3>()(const Vec3&)\nstd:: nordered_map<Vec3, int, std::hash<Vec3>, std::equal_to<Vec3>> mp; \n\n// \u4e3a\u4ec0\u4e48\u8fd9\u91cc\u7684std::greater<int>\u53ef\u4ee5\u5199\u6210std::greater<>\nstd::priority_queue<int, std::vector<int>, std::greater<int>> q; \n\n// \u4e3a\u4ec0\u4e48\u8fd9\u91cc\u65e2\u53ef\u4ee5\u901a\u8fc7\u91cd\u8f7dVec3\u7684operator<, \u53c8\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u91cd\u8f7d\u4e86operator()(Vec3, Vec3)\u7684cmp\u7c7b\uff0c \u4f46\u662f\u4e0d\u80fd\u628acmp\u5199\u6210lambda\nstd::priority_queue<Vec3> q; \n")),(0,r.kt)("p",null,"\u8fd8\u6709\u5c31\u662fstd::function\u662f\u600e\u4e48\u5bf9\u5404\u79cd\u5f62\u5f0f\u7684\u4eff\u51fd\u6570\u8fdb\u884c\u5c01\u88c5\u7684\uff0c\u53c8\u6709\u4ec0\u4e48\u4f18\u70b9\uff1fstd::bind\u662f\u5e72\u4ec0\u4e48\u7684\uff1f"),(0,r.kt)("h2",{id:"c\u51fd\u6570\u6307\u9488"},"c\u51fd\u6570\u6307\u9488"),(0,r.kt)("p",null,"\u51fd\u6570\u6307\u9488\u7684\u58f0\u660e\u683c\u5f0f\n",(0,r.kt)("inlineCode",{parentName:"p"},"typedef void(*AttackFunc)(Hero&)"),", \u661f\u53f7\u548c\u51fd\u6570\u540d\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u52a0\u62ec\u53f7\uff0c\u524d\u9762\u5199\u8fd4\u56de\u503c\uff0c\u540e\u9762\u5199\u53c2\u6570\u3002"),(0,r.kt)("p",null,"\u51fd\u6570\u4f5c\u4e3a\u4e00\u7b49\u516c\u6c11\u53ef\u4ee5\u65b9\u4fbf\u7684\u5b9e\u73b0\u7b56\u7565\u6a21\u5f0f\uff08Stragegy Pattern\uff09, \u4f7f\u5f97\u67d0\u4e2a\u51fd\u6570\u7684\u5177\u4f53\u5b9e\u73b0\u65b9\u5f0f\u53ef\u63d2\u62d4\uff0c\u53ef\u5199\u5728\u5176\u4ed6\u5730\u65b9\uff0c\u53ef\u5199\u8fdb\u914d\u7f6e\u6587\u4ef6\u7b49\u7b49\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"struct Hero{\n    int hp = 10;\n};\n\ntypedef void (*AttackFunc)(Hero&);\n\nvoid Tick(Hero& hero, AttackFunc func){\n    func(hero);\n}\n\nvoid AttackSword(Hero& hero){\n    hero.hp -= 1;\n}\n\nvoid AttackGun(Hero& hero){\n    hero.hp -= 5;\n}\n\n\nint main(){\n    Hero hero;\n    Tick(hero, AttackGun);\n    Tick(hero, AttackSword);\n}\n\n")),(0,r.kt)("p",null,"\u8fd9\u79cd\u65b9\u5f0f\u6709\u4e24\u4e2a\u7f3a\u70b9\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u65e0\u6cd5\u4f20\u9012\u989d\u5916\u53c2\u6570\uff08\u6355\u83b7\u5c40\u90e8\u53d8\u91cf\uff09"),(0,r.kt)("li",{parentName:"ul"},"\u5f97\u58f0\u660e\u6210\u5168\u5c40\u51fd\u6570\uff0c\u65e0\u6cd5\u5c31\u5730\u5b9a\u4e49")),(0,r.kt)("p",null,"c\u8bed\u8a00\u901a\u8fc7void*\u7c7b\u578b\u64e6\u9664\u53ef\u4ee5\u89e3\u51b3\u7b2c\u4e00\u4e2a\u95ee\u9898"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void Tick(Hero& hero, AttackFunc func, int val){\n    func(hero, &val);\n}\n\nvoid AttackSword(Hero& hero, void* value){\n    hero.hp -= *static_cast<int*>(value);\n}\n\nvoid AttackGun(Hero& hero, void* value){\n    hero.hp -= *static_cast<int*>(value) * 2;\n}\n\n\nint main(){\n    Hero hero;\n    int BaseDamage = 1;\n    Tick(hero, AttackGun, BaseDamage);\n    Tick(hero, AttackSword, BaseDamage);\n}\n")),(0,r.kt)("p",null,"\u5982\u679c\u9700\u8981\u6355\u83b7\u66f4\u591a\u7684\u5c40\u90e8\u53c2\u6570\u5c31\u5f97\u4f7f\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u628avoid*\u8f6c\u578b\u6210\u7ed3\u6784\u4f53\u6307\u9488"),(0,r.kt)("h2",{id:"\u4eff\u51fd\u6570\u548clambda"},"\u4eff\u51fd\u6570\u548clambda"),(0,r.kt)("p",null,"\u9996\u5148\u6211\u4eec\u77e5\u9053functor\u548clambda\u672c\u8d28\u4e0a\u662f\u4e00\u6837\u7684\uff0c\u7528",(0,r.kt)("a",{parentName:"p",href:"https://cppinsights.io/"},"cppinsight"),"\u53ef\u4ee5\u770b\u5230\u7f16\u8bd1\u5668\u80cc\u540e\u751f\u6210\u7684\u4ee3\u7801\uff08\u8fd9\u4e2a\u4e5f\u53ef\u4ee5\u7528\u6765\u8c03\u8bd5\u6a21\u677f\u5143\uff0c\u795e\u5668\uff01\uff09\n\u4eff\u51fd\u6570\u91cd\u8f7doperator()\u662f\u5efa\u8bae\u52a0const\u7684\uff0c\u56e0\u4e3a\u8c03\u7528\u8005\u4e00\u822c\u559c\u6b22",(0,r.kt)("inlineCode",{parentName:"p"},"const AttackFunc& func"),"\u8fd9\u79cd\u5f62\u5f0f\u4f20\u5165\uff0c\u53ea\u80fd\u6267\u884cconst\u65b9\u6cd5\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"struct Hero{\n    int hp = 10;\n};\n\nstruct AttackFunctorSword{\n    void operator()(Hero& hero) const {\n        hero.hp -= value; \n    };\n    int value = 1;\n};\n\nstruct AttackFunctorGun{\n    void operator()(Hero& hero) const{\n        hero.hp -= value;\n    };\n    int value = 1;\n};\n\ntemplate <typename AttackFunc>\nvoid Tick(Hero& hero, const AttackFunc& func){\n    func(hero);\n}\n\n\nint main(){\n    Hero hero;\n    int BaseDamage = 1;\n    \n    AttackFunctorGun gunFunctor; \n    gunFunctor.value = BaseDamage;\n\n    AttackFunctorSword swordFunctor; \n    swordFunctor.value = BaseDamage;\n\n    Tick(hero, gunFunctor);\n    Tick(hero, swordFunctor);\n}\n\n")),(0,r.kt)("p",null,"\u5176\u5b9elambda\u91cc\u7684operator()\u4e5f\u662f\u9ed8\u8ba4\u52a0const\u7684, \u56e0\u6b64\u5bf9\u4e8e\u9700\u8981\u4fee\u6539\u53d8\u91cf\u503c\u7684\u60c5\u51b5\u6709\u4e24\u79cd\u5199\u6cd5"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// 1. \u5f15\u7528\u6355\u83b7\nint a = 1;\nauto f = [&a](){\n    a = 2;\n}\n\n// 2. mutable \uff0c mutable\u4f1a\u628a\u9ed8\u8ba4\u52a0\u7684const\u7ed9\u53bb\u6389\nint a = 1;\nauto f [a]() mutable {\n    a = 2;\n}\n")),(0,r.kt)("h2",{id:"stdfunction"},"std::function"),(0,r.kt)("p",null,"\u4eff\u51fd\u6570\u548c\u6a21\u677f\u7684\u7f3a\u70b9\u5728\u4e8e\uff0c\u5f97\u7528\u6a21\u677f\u7684\u5f62\u5f0f\u6765\u5b9e\u73b0strategy\u8fd9\u79cd\u9759\u6001\u591a\u6001\u3002\u800c\u6a21\u677f\u7684\u7f3a\u70b9\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u4e0d\u80fd\u505a\u5230\u5934\u6587\u4ef6\u5206\u79bb\uff08\u5373\u4f7f\u5206\u79bb\u4e5f\u5f97\u663e\u793a\u5b9e\u4f8b\u5316\uff0c\u975e\u5e38\u6ef4\u9ebb\u70e6\uff09"),(0,r.kt)("li",{parentName:"ol"},"\u6211\u6709n\u4e2a\u5177\u4f53\u7684AttackFunctor\u5c31\u9700\u8981\u7f16\u8bd1\u540e\u5b9e\u4f8b\u5316n\u6b21\uff0c\u5bfc\u81f4\u5185\u5b58\u5360\u7528\u589e\u52a0")),(0,r.kt)("p",null,"\u56e0\u6b64std::function\u6a2a\u7a7a\u51fa\u4e16"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void Tick(Hero& hero, const std::function<void(Hero&)>& func){\n    func(hero);\n}\nint main(){\n    Hero hero;\n    int BaseDamage = 1;\n\n    std::function<void(Hero&)> GunFunc = [BaseDamage](Hero& h){\n        h.hp -= BaseDamage * 2;\n    };\n    std::function<void(Hero&)> SwordFunc = [BaseDamage](Hero& h){\n        h.hp -= BaseDamage;\n    };\n    Tick(hero, GunFunc);\n    Tick(hero, SwordFunc);\n}\n")),(0,r.kt)("p",null,"\u90a3\u4e48std::function\u662f\u600e\u4e48\u5b9e\u73b0\u53ef\u4ee5\u540c\u65f6warp functor\u3001lambda\u548c\u51fd\u6570\u6307\u9488\u7684\u5462 ==> \u7c7b\u578b\u64e6\u9664"),(0,r.kt)("p",null,"\u9996\u5148\u660e\u786e\u4e00\u4e0b\u9700\u8981\u652f\u6301\u7684\u529f\u80fd"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"Function<int(int)> function_1([](int x){ return x + 1;});\nFunction<int(int)> function_2 = &FuncPtr;\nint a = 1;\nstd::cout << function(a) << function_2(a);\n")),(0,r.kt)("p",null,"\u5b9e\u73b0\u4e00\u4e2a\u521d\u7248"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"template<typename Ret, typename ... Args>\nstruct Function<Ret(Args...)>{\n\n};\n")),(0,r.kt)("p",null,"\u6a21\u677f\u53c2\u6570\u6709\u4e86\uff0c\u4f46\u662f\u600e\u4e48\u5b9e\u73b0\u4f20\u5165\u7684\u51fd\u6570\u53c2\u6570\u5462\uff0c\u8fd9\u4e2a\u51fd\u6570\u53c2\u6570\u9700\u8981\u540c\u65f6\u652f\u6301\u51fd\u6570\u6307\u9488\u548c\u5e26\u6709operator()\u7684\u7ed3\u6784\u4f53/lambda\u3002\u65e2\u7136\u8981\u628a\u8fd9\u4e09\u79cd\u4f20\u5165\u7c7b\u578bwarp\u8d77\u6765\uff0c\u81ea\u7136\u5c31\u8981\u6709\u4e2awarp\u7c7b, \u4e0b\u9762\u7684\u8fd9\u4e2aFuncBase\u5c31\u662fwarp\u7c7b\uff0c\u56e0\u4e3aWarp\u7c7b\u9700\u8981\u652f\u6301\u8c03\u7528\u4efb\u610f\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684operator(), \u6240\u4ee5\u5199\u5728Function\u5185\u90e8\uff0c\u53ef\u4ee5\u4f7f\u7528Function\u7684\u6a21\u677f\u53c2\u6570"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"template<typename Ret, typename ... Args>\nstruct Function<Ret(Args...)>{\n    template<typename F>\n    struct FunctionBase{\n        Ret Call(Args... args){\n            return std::invoke(m_f, std::forward<Args>(args)...);\n        }\n        F m_f;\n    };\n\n    std::shared_ptr<FunctionBase> m_f;\n};\n")),(0,r.kt)("p",null,"\u8fd9\u6837\u663e\u7136\u8fc7\u4e0d\u4e86\u7f16\u8bd1\uff0c\u56e0\u4e3aFunctionBase\u4f9d\u8d56\u4e8e\u6a21\u677f\u53c2\u6570F\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u628a\u8fd9\u4e2a\u53c2\u6570F\u64e6\u9664\u6389"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"template<typename Ret, typename ... Args>\nstruct Function<Ret(Args...)>{\n\n    struct FunctionBase{\n        virtual Ret Call(Args... args) = 0;\n        virtual ~FunctionBase() = default;\n    };\n\n    template<typename F>\n    struct FunctionImpl : public FunctionBase {\n        Ret Call(Args... args) override {\n            return std::invoke(m_f, std::forward<Args>(args)...);\n        }\n        F m_f;\n    };\n\n\n    std::shared_ptr<FunctionBase> m_f;\n};\n")),(0,r.kt)("p",null,"\u901a\u8fc7\u4e00\u4e2a\u4e0d\u5e26\u6a21\u677f\u53c2\u6570\u7684\u57fa\u7c7b\u5c31\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u578b\u7684\u64e6\u9664\uff0c\u5b9a\u4e49\u51fa\u8fd9\u6837\u7684\u6210\u5458\u53d8\u91cf",(0,r.kt)("inlineCode",{parentName:"p"},"std::shared_ptr<FunctionBase> m_f;"),"\n\u6700\u540e\u8865\u5168\u62f7\u8d1d\u6784\u9020"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"template<typename Ret, typename ... Args>\nstruct Function<Ret(Args...)>{\n    struct FunctionBase{\n        virtual Ret Call(Args... args) = 0;\n        virtual ~FunctionBase() = default;\n    };\n\n    template<typename F>\n    struct FunctionImpl : public FunctionBase {\n        FunctionImpl(F f)\n            :m_f(std::move(f)){}\n\n        Ret Call(Args... args) override {\n            return std::invoke(m_f, std::forward<Args>(args)...);\n        }\n        F m_f;\n    };\n\n    Function() = default;\n\n    template<typename F>\n    Function(F f)\n        : m_base(std::make_shared<FunctionImpl<F>>(std::move(f)))\n    {}\n\n    // Function operator= (const Function&) = delete;\n    Ret operator()(Args... args) const {\n        return m_base->Call(std::forward<Args>(args)...);\n    }\n    std::shared_ptr<FunctionBase> m_base;\n};\n")),(0,r.kt)("h2",{id:"\u5728stdfor_each\u4e2d\u770blambda\u548cstdbind"},"\u5728std::for_each\u4e2d\u770blambda\u548cstd::bind"),(0,r.kt)("h3",{id:"stdfor_each"},"std::for_each"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"std::vector<int> vec= {1, 2, 3};\nstd::for_each(vec.begin(), vec.end(), [](int& item) {\n    item += 1;\n});\nstd::for_each(vec.begin(), vec.end(), [](int item) {\n    std::cout << item;\n});\n")),(0,r.kt)("p",null,"\u6211\u4eec\u53d1\u73b0\u8fd9\u91cc\u7684lambda\u4e2d\u7684\u53c2\u6570\u65e2\u53ef\u4ee5int\u4e5f\u53ef\u4ee5int&\uff0c\u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462,\u70b9\u8fdb\u53bb\u770b\u5b9e\u73b0\n",(0,r.kt)("img",{alt:"alt text",src:t(3186).Z,width:"648",height:"329"}),"\n\u53ef\u4ee5\u770b\u5230\u5c31\u662f\u666e\u901a\u7684\u6a21\u677f\u7c7b\uff0c\u91cc\u9762\u8c03\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"_Func(*_UFirst)"),", _UFirst\u662f\u8fed\u4ee3\u5668\u7c7b\u578b\uff0c\u76f8\u5f53\u4e8e\u6307\u9488\uff0c\u90a3\u4e48",(0,r.kt)("inlineCode",{parentName:"p"},"*_UFirst"),"\u5728\u8fd9\u91cc\u5c31\u662fint\uff0c\u76f8\u5f53\u4e8e\u7ed9_func(int)\u548c_func(int&)\u4f20\u53c2,\u524d\u8005\u4e0d\u4f1a\u4fee\u6539\u4f20\u5165\u7684\u53c2\u6570\uff0c\u540e\u8005\u4f1a\u4fee\u6539\u4f20\u5165\u7684\u53c2\u6570\uff0c\u81ea\u7136\u4e24\u79cd\u90fd\u53ef\u4ee5\u3002"),(0,r.kt)("p",null,"\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u770b\u51falambda\u7684\u4e00\u4e2a\u4f18\u52bf\uff0c\u4e0b\u9762\u4e24\u79cd\u7b2c\u4e00\u4e2a\u7f16\u8bd1\u4e0d\u901a\u8fc7\uff0c\u7b2c\u4e8c\u4e2a\u501f\u52a9\u6355\u83b7\u53ef\u4ee5\u7f16\u8bd1\u901a\u8fc7"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"std::for_each(vec.begin(), vec.end(), [](int& item, int inc) {\n        item += inc;\n});\n\nint inc;\nstd::for_each(vec.begin(), vec.end(), [inc](int& item) {\n        item += inc;\n});\n")),(0,r.kt)("h3",{id:"lambda\u548cstdbind"},"lambda\u548cstd::bind"),(0,r.kt)("p",null,"\u5f53\u6211\u73b0\u5728\u6709\u4e24\u4e2a\u51fd\u6570\uff0c\u4ed6\u4eec\u90fd\u662f\u522b\u4eba\u5199\u7684\u4e0d\u80fd\u4fee\u6539\u5b9a\u4e49\uff0c\u6bd4\u5982"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// \u51fd\u65701\nvoid Increment(int &val, int inc) {\n    val += inc;\n}\n\n// \u51fd\u65702\nstd::for_each(_, _, OP);\n")),(0,r.kt)("p",null,"Op\u7684\u53c2\u6570\u4e2a\u6570\u5c0f\u4e8eIncrement\u4e2a\u6570\u65f6\uff0c\u53ef\u4ee5\u7528lambda\u6216bind\u6765\u5b9e\u73b0\uff0clambda\u7684\u5b58\u5728\u8ba9bind\u6709\u70b9\u610f\u4e49\u4e0d\u5927\u4e86"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"std::vector<int> data = {1, 2, 3};\nint inc = 5;\n\n    // std::bind\n    auto my_inc = std::bind(Increment, inc, std::placeholders::_1);\n    std::for_each(data.begin(), data.end(), my_inc);\n\n    // lambda\n    std::for_each(data.begin(), data.end(), [inc](int& item) {\n        Increment(item, inc);\n    });\n\n// Op\u53c2\u6570\u5927\u4e8eIncrement\n")))}d.isMDXComponent=!0},3186:(n,e,t)=>{t.d(e,{Z:()=>a});const a=t.p+"assets/images/image-ca49a34ba4b6ace5dbc99aeb887c34d5.png"}}]);